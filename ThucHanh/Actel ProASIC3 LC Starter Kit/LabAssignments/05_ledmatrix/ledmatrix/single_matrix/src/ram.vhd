--------------------------------------------------------------------------------
--
-- Design unit generated by Aldec IP Core Generator, version 9.1.
-- Copyright (c) 1997 - 2011 by Aldec, Inc. All rights reserved.
--
--------------------------------------------------------------------------------
--
-- Created on Friday 2013-11-15, 22:04:46
--
--------------------------------------------------------------------------------
-- Details:
--		Type: Synchronous single port Random Access Memory (RAM)
--		Word size: 8 bits
--		Memory depth: 8 words
--		Clock input CLK active high
--		Write enable input WE active high
--------------------------------------------------------------------------------

--{{ Section below this comment is automatically maintained
--   and may be overwritten
--{entity {ram} architecture {ram_arch}}

library IEEE;
use IEEE.STD_LOGIC_1164.all;



entity ram is
	 generic(
        ROW_WIDTH : INTEGER := 8;  --- Do rong cua 1 ngan nho = so den led tren moi do`ng
	    ADDR_WIDTH : INTEGER := 3  --- so bit dia chi, 2** phan anh so luong do`ng cua led ma tran
	 );
	 port(
		 WE : in STD_LOGIC;
		 CLK : in STD_LOGIC;                               --- Tin hieu dong ho
		 ADDR : in STD_LOGIC_VECTOR(ADDR_WIDTH-1 downto 0);--- Tin hieu dia chi ngan nho can doc
		 DATA : in STD_LOGIC_VECTOR(ROW_WIDTH-1 downto 0);
		 Q : out STD_LOGIC_VECTOR(ROW_WIDTH-1 downto 0)    --- Gia tri cua ngan nho tuong ung voi dia chi ADDR
	     );
end ram;

--}} End of automatically maintained section

library IEEE;
use IEEE.std_logic_unsigned.all;

architecture ram_arch of ram is

	type ram_mem_type is array (0 to (2**ADDR_WIDTH-1)) of std_logic_vector(ROW_WIDTH-1 downto 0);
	signal ram_mem : ram_mem_type;

begin

	process (CLK)
	begin
		if rising_edge(CLK) then
			if (WE = '1') then
				ram_mem(CONV_INTEGER(ADDR)) <= DATA;                
			end if;                                 
            Q <= ram_mem(CONV_INTEGER(ADDR));
		end if;
	end process;

	

end architecture;
