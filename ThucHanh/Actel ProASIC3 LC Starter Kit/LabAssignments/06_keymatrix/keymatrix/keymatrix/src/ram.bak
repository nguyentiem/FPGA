--------------------------------------------------------------------------------
--
-- Design unit generated by Aldec IP Core Generator, version 9.1.
-- Copyright (c) 1997 - 2011 by Aldec, Inc. All rights reserved.
--
--------------------------------------------------------------------------------
--
-- Created on Friday 2013-11-15, 22:04:46
--
--------------------------------------------------------------------------------
-- Details:
--		Type: Synchronous single port Random Access Memory (RAM)
--		Word size: 8 bits
--		Memory depth: 8 words
--		Clock input CLK active high
--		Write enable input WE active high
--------------------------------------------------------------------------------

--{{ Section below this comment is automatically maintained
--   and may be overwritten
--{entity {ram} architecture {ram_arch}}

library IEEE;
use IEEE.std_logic_1164.all;

entity ram is 
    generic (
        ROW_WIDTH : integer := 8;
        ADDR_WIDTH : integer := 3   --! So chan dia chi, la log2(COLUMN_WIDTH). Vi so luong ngan nho la so luong cot.
    );
	port (
		WE : in std_logic;
		CLK : in std_logic;
		ADDR : in std_logic_vector( ADDR_WIDTH-1 downto 0);
		DATA : in std_logic_vector(ROW_WIDTH-1 downto 0);
		Q : out std_logic_vector(ROW_WIDTH-1 downto 0)
	);
end entity;
                
--}} End of automatically maintained section

library IEEE;
use IEEE.std_logic_unsigned.all;

architecture ram_arch of ram is

	type ram_mem_type is array ((2**ADDR_WIDTH-1) downto 0) of std_logic_vector(ROW_WIDTH-1 downto 0);
	signal ram_mem : ram_mem_type;

begin

	process (CLK)
	begin
		if rising_edge(CLK) then
			if (WE = '1') then
				ram_mem(CONV_INTEGER(ADDR)) <= DATA;
			end if;
		end if;
	end process;

	Q <= ram_mem(CONV_INTEGER(ADDR));

end architecture;
