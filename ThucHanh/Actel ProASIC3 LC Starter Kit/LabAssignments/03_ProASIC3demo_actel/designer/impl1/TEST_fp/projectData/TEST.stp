NOTE "CREATOR" "Designer Version: 7.3.0.29";
NOTE "DEVICE" "A3P250";
NOTE "PACKAGE" "A3P250-PQ208";
NOTE "DATE" "2007/04/05";
NOTE "STAPL_VERSION" "JESD71";
NOTE "IDCODE" "02A141CF";
NOTE "DESIGN" "TEST";
NOTE "CHECKSUM" "8BBD";
NOTE "SAVE_DATA" "FRomStream";
NOTE "SECURITY" "Disable";
NOTE "ALG_VERSION" "11";
NOTE "MAP_VERSION" "1";
NOTE "TOOL_VERSION" "1";
NOTE "MAX_FREQ" "10000000";
NOTE "SILSIG" "00000000";
NOTE "DIRECTC_VERSION" "140";
NOTE "TRACKING_SAR" "60474";
NOTE "SPEED_GRAD" "STD";
NOTE "TEMP_GRAD" "COM";
NOTE "PRG_BSR_SET_IO" "Z";


ACTION PROGRAM =
                W_INITIALIZE,
                DO_ERASE,
                DO_PROGRAM,
                DO_VERIFY_BOL,
                DO_PROGRAM_RLOCK,
                DO_EXIT;
ACTION PROGRAM_ARRAY =
                AW_INITIALIZE,
                DO_ERASE_ARRAY,
                DO_PROGRAM,
                DO_VERIFY_BOL,
                DO_PROGRAM_RLOCK,
                DO_EXIT;
ACTION ERASE_ARRAY = 
                AW_INITIALIZE,
                DO_ERASE_ARRAY_ONLY,
                DO_EXIT;
ACTION ERASE = 
                W_INITIALIZE,
                DO_ERASE_ONLY,
                DO_EXIT;
ACTION ERASE_ALL = 
                INITIALIZE,
                DO_ERASE_ALL,
                DO_EXIT;
ACTION VERIFY = 
                R_INITIALIZE,
                DO_VERIFY_EOL,
                DO_EXIT;
ACTION VERIFY_ARRAY = 
                AR_INITIALIZE,
                DO_VERIFY_EOL,
                DO_EXIT;
ACTION READ_IDCODE = DO_READ_IDCODE;
ACTION VERIFY_DEVICE_INFO = 
                READ_INITIALIZE,
                PROC_READ_IDCODE,
                DO_VERIFY_DEVICE_INFO,
                DO_EXIT;
ACTION DEVICE_INFO = 
                READ_INITIALIZE,
                PROC_READ_IDCODE,
                DO_DEVICE_INFO, 
                DO_QUERY_SECURITY,
                DO_EXIT;

DATA PARAMETERS;
INTEGER freq = 4;
ENDDATA;

DATA GV;
' Generic Buffers.
BOOLEAN Buff128[128];
BOOLEAN Buff32[32];
INTEGER IDRev;
INTEGER IDFab;

INTEGER i;
INTEGER SDNumber;
INTEGER RowNumber;
INTEGER DataIndex=0;
INTEGER FRomRowNumber=1;
INTEGER AESBlock;

BOOLEAN ID[32];
BOOLEAN PASS = 1;
INTEGER STATUS = 0;
BOOLEAN SECURITY_PASS = 0;

BOOLEAN SILSIG[32] = $00000000;
BOOLEAN ISC_Config_Result[18];
BOOLEAN VERIFY_EOL[2];
BOOLEAN CombEraseSelect[23];

' signal to display cycle count in PROC_DISPLAY_UROW;
BOOLEAN FLAG_DISPLAY_CYC = 0;

' Set to 1 of need to check for security key
BOOLEAN SECKEY_CHK = 0;
BOOLEAN SECKEY_OK =1;
BOOLEAN SecReg[44];
BOOLEAN ULUWE = 0;
BOOLEAN ULARE = 0;
BOOLEAN ULUPC = 0;
BOOLEAN ULUFE = 0;
BOOLEAN ULUFP = 0;
BOOLEAN ULUFJ = 0;
BOOLEAN ULFLR = 0;
BOOLEAN ULULR = 0;
BOOLEAN ULAWE = 0;
BOOLEAN ULARD = 0;
BOOLEAN ULOPT[2];

''''''''''''''''''''''''''''''''''''''''''
' Reserved Variable names for ACTEL STAPL file used by programming 
' tools to modify the UROW fields. This is possible because UROW 
' field is does not have security support.
'
' Design Checksum in UROW
' Displayed by Display Device Info Action
BOOLEAN sUROW_CHECKSUM[16];

' Cycle Counter
' increment by one for every FPGA Array programming
INTEGER ACT_UROW_CYCLE_COUNT = 0;
INTEGER sUROW_CYCLE_COUNT = 0;

' Design Name
' 10 7-bit characters
BOOLEAN ACT_UROW_DESIGN_NAME[70] = $010204081022B47295;
BOOLEAN sUROW_DESIGN_NAME[70];

'Programming Method
' 000 ------ IEEE1532
' 001 ------ STAPL
' 010 ------ DirectC
' 111 ------ default
BOOLEAN ACT_UROW_PROG_METHOD[3] = #001;
BOOLEAN sUROW_PROG_METHOD[3];

'Programming Algorithm Version
BOOLEAN ACT_UROW_ALGO_VERSION[4] = #1011;
BOOLEAN sUROW_ALGO_VERSION[4];

'Programming Software Version
BOOLEAN ACT_UROW_SW_VERSION[7];
BOOLEAN sUROW_SW_VERSION[7];

'BP Programming Software Version
INTEGER PLAYER_VERSION_VARIABLE = 0;
INTEGER SCULPTOR_MAJOR_BASE = 4;
INTEGER SCULPTOR_MINOR_BASE = 50;

'Programmer
'0000 ------ FlashPro SW with FlashPro
'0001 ------ FlashPro SW with FlashPro Lite
'0010 ------ FlashPro SW with FlashPro3
'0011 ------ Sculptor WIN  
'0100 ------ BP Win
'0101 ------ DirectC
'0110 ------ Actel JAM player
'1111 ------ default
BOOLEAN ACT_UROW_PROGRAM_SW[4] = #1111;
BOOLEAN sUROW_PROGRAM_SW[4];

BOOLEAN IsEraseOnly = 0;
BOOLEAN IsRestoreDesign = 0;
BOOLEAN BsrPattern[708] =
$92492492492492492492492492492492492492492492492492492492492492492492492492492
4924924924924924924924924924924924924924924924924924924924924924924924924924
924924924924924924924924;
BOOLEAN rlock[832] =
$7FFFFFCFFFFFFBFFFFFEFFFFFFBFFFFFEFFFFFFFFFFFFFFFFFFF3FFFFFCFFFFFF3FFFFFCFFFFFF
3FFFFFCFFFFFF3FFFFFDFFFFFF3FFFFFCFFFFFF3FFFFFCFFFFFF3FFFFFCFFFFFF3FFFFFDFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;
BOOLEAN ArrayROnly = 1;
BOOLEAN ChkArray = 0;
BOOLEAN FromROnly = 1;
BOOLEAN ChkFrom = 1;
BOOLEAN ChkSec = 1;
BOOLEAN SetEraseSec = 0;
BOOLEAN PERMLOCK = 0;

INTEGER hex[16]= 70,69,68,67,66,65,57,56,55,54,53,52,51,50,49,48;

ENDDATA;

DATA BITSTREAM;
' DataSize = total number of bits
' Data = data from map file.
BOOLEAN datastream[1913600] =
@WPw00000110040W0W000020G000400108002200000Wwcqssso0000p@@lF999IjjjQp0000_@x@
@IYaatcjj50000y_@@7HIIIORRRR36uXaa49jjTDqWD2000y@@EH0vssMj90008@@z@69HIo0000
49IIICIII2Va00008III0HII2i134999H899f67Waaa4aaaKD020Za491aa8900gX7GIIIA00008
00m0G0aaaa9mWauWku00000IIIIg1Vqsssosssc3999A1000jjjQpjjPRMIYay0000tcjjbMjjj8
III20000ORRR3RRRhWaaa3ZWQW3sORRssba897000mskJAGIIIYC000Wbaa8vIIaaJRpsEJYaaD9
IIo4999sijjz8999B999fKHWjjj19999aaaaGIII2QRRpIIIY4IIoQm6caaausssgZaa4PIIIdW0
PRRRsIIIa600So88EH0IIIYxa1r72IF6WaaaySHGDW50IIIr07AK6KV8O0OGDuWIQ1r02AY4K3Qe
TDHDu22000r05w4AessscJIIIUy0ejjj2aaa84000G00e6GGhK1ijjjYaaa2d7K3w0JIIIkyWQW2
qsssWjjjvIIIYO@@l@jjDR7RRssaa89X@x@Vsk6KW99992@@@_nssiDjjT@80n@@VD84LIII4@@@
zjjjPpQRhJW04@@@_GRRrMRRpsijLRxlDRRtMjjTtijjNrss6pssssssscsssMHRRRMQRRrYjjPR
ijLRpsMD01sORRh1ymssscvssMjRRRsCRRrsljL3GWz000040030OK3uK@Z130Br9SX000WQ0D2D
efjmf1WCZJMB22jOho2q_FGp@1Q_FGp@1Q_FGp@1Q_FG3l8999HIII2baa41999oIIIaeaa8989H
IMIYa49f6G10999HGIIc1W089992IIIaaaa81IIg6W7T2ce6W6H3UAGZ@3qu@0D_FG3Nh4q0GIII
a200YKW04000W899BpyWS3LOKH3QFyWQ00fJ0AsHyW10I02000800W10sfJ0AaaaaO0000GIIYS0
000A99I20000ca89H0e6W2400008999N12g1mWqEFe6WEw4OYI6Fmaaa45000WIIIz7GWIIII000
0W899xHWaQ0eeJWB21m0Waaae000g2W020000IIIa100q7m1jIGGY09SOm1r0CId0KaB91f1K0WI
Ioq080HIIID0Gq9G4r0CId0EC0m@30yV0Dr5DmQ1ezVWJ@7uq@12_Vy8a7Qm@1qyVm9@7K7GA999
ZZx2baaazmTHD0T4yew1dyVm9@7yur1DWMmZ@7yu@1F_@00@7Gp@1F_VmZ@7yu@1F_VOO@7Qm@1q
yVmZ@7yu@1F_Vm9@7yu@1F6lijjD3000Wsssi50000QRps6000WiDRR70r0W0WjjDR000r0GmDX4
ejjjf6WHw482ssssGIIIaRRRp899H2jjDRXa49fssijJIaa4sM3G1Yjjjh1G1YjjjQaaag18aE1e
mssscJIIIGRRRs999Hgjjz4m1CJIIaussgjIIg602iGIIY4RRxMW5g1eZE1ce6020000uaaa4200
0GIIIa2009HU0eaa49200@CUmvX70999fFI5g1GZE1iG2@@l@Xa499@@_@JIaa4@x@@DHII2l@@@
79999r0aW799fQ0809999u@@VFaaar0GId0DuZaayZ02KRRR@uW1tFG0sssM5000WQRRrA00K3W2
3FG0sssss28msssID0cq9G3r0Gm00@F0m@1RzVmZ@7yu@1ezVmZ@76s@1ezVmZ@7S2xlrFHmZ@7y
u@1dyVmZ@t9W34aai2Uy@W7@Fun@70u@W7@FOh@3Uy@W7@Fun@3Ev@mm_FWc@3Uy@WJc6W00GmZ@
7yu@1dyVmZ@N3G1GIII2q8ZW7@Fun@3Uy@10_F0j@3sw@W7@Fun@3Uy@WJ_FUa314004QGPH3OHG
3w6d0Q1F_Vm9n6y8mIGIo2Uy@W7@Fun@3ITgW7@Fun@3Uy@10_F0j@3Uy@W7@Fun@3Uy@WJ_FU47
90004QGPH3yGG317d0Q1F_VmZ@7KdSWaaW2Uy@W7@Fun@3Uy@W7@Fun@3Uy@10_Fun@3Uy@W7@F0
j@3Uy@mm_FqW@3Uy@WJ_FuH1biaa4KNPH3GGmZ@7So@1F_VmZ@7yu@1F_VmZ@F0m@1qyVmZ@7yu@
1ezVmZ@76s@X6yV0Dp7So@1F6PGTu5yu@1dyVmZ@7yu@1F_VmZ@7yu@30yVmM@7yu@1F_V0Q@71n
9400060eOW00030KGe1O4q0IH3OGS226fIm3AyG0D038008un@3Uy@E18GoII25aaaE1A089GIGT
Q9P99XIGIImZ@75LfW0002Uy@W7zaWaaGmZ@7yu@1F_@00@7yu@1F_VmZ@7yu@1eXVm9@72@@1qy
VS2k6So@1daIpU94yuN1r9NmZ@7So@1F_Vq0iC2W11QSHmZ7310WCunoCjjTYWaa8unjOJRRt901
ARRZ8B994yum_x@@3UiC02001F_LIGTKCGKhPVmVFDSEkQF1IxT2GyEU21dyLq0e11008XEWJDuW
j6C8q032Sw94001H3OHG3Sjd131FUB100WU0o8EXdEDnY88gQ0WcZ6nW608usW72Qufe1K8u0w2G
x@eR4fJW808004DWR1F_VmZ86fo41Fw4oGIIbWaaG199x4W09899KIII4Cea8B989ekdA4W0899A
IGI2w48113B9o22I2UKgWJKel2y2dGgxkQ0800GK7O5D041F_VmZv4eHKT2qWqaaaE18WWaaLmZL
5hq4XQOGmZB1G00e602810Gptss2010Gd04G00WKPRRNmZETj81WaaSzss6HGIIGRQRB8899gbij
waXa2Uy9RPRRT2G0GRR7189fiajjx4W0ZjjHaca42UiA2008IIII1400q901W00ee9994yeJ_z@@
h1W0j@@d8999yn@@t901I@@F4aaa4yOLW000Lsss1400eJ02G10GPIRRPfmUZyZXCQggeZ6Q3ajj
AHBGz@3UKpMWOexY3Yzhge1c80Dn2UitiNv8E1acdoWE18O2a9YQltdME0200GMF44DWMW200Y7H
kG3sAu_@x4WdM6KuhZ4Y6Ggb1EesQn2Efj1yW8msP58004Kt51Fk4IGIIdaaaG989x4G11A99nnH
GGTE1aaaa9D9PD06WiWaCun2899P1JII866Wp6mY22GwkB3w4uWXstAQW2Mp0Xe1c8ibkwdPXe1o
A1j42Uii0DYg6W281A9HI22gJW4881P5yOLnmaHmZB1470GMMsc180WE180a400wxRR6G20T2GGm
ZEnoms6oWIYSJRR6909IedlPBa089rsYjT20aaOxW7RoEoscJgIIGBHRs9l9HgvWPR4G49vImw05
4yeJ0i00SQQI21I0eJ020b30q901G00eOP994yeJ_0_@1159H_b_lJ02yIy@t901ay@Facaa4yeJ
0210GJIRJ0010WDfTd04WbnjL1X30esssW7nzCi6sGShmcKhQWAke9gH1I0G80mz84qYv31dWqj0
44x714000AXnWe1CWW00GmZ@Vx7A30WWG00WuhABA03GG00KgWKW002EjtYW7rz7XC2kdM2001xC
SmoH7aR1PdTSNy81VTp3X6aLmmUr1Z1vpSGoDC4q0N2200Y6eAa001BcUn00Xj7c1rdKrLfM4d0J
40022Efi8zR8AW42Uq94aaaT2K08989IIM24a4b2g3B8999IIIKaWa44D01aa4b88911JIoApC3Y
Jmfk7M8wak4010CEY6H4zqdMDinxMH3emYnF4QWINQHGWwy5RXJ52GGd098P999G3iGMIG4DG3KG
GIY6uWu4ogO392US90O10osssCei00QRVpM04GD04m1W10ajbTmZFnsqs622IYOQUR6119IeDbPB
a489nIWjT22baOxW7RomYscJ2GIOP1Rs908HgbaPRaq49nmgjDIpW7X2800Gd048K00HIMIIG04m
QII00005jD9XW7Torj@VD04Wf@@4999Xtd@VcaWaWxh@zH0G6yuJG020g101PR70m00sCjj5I20W
oqqsIeMiE0m2XSOGdi7iHbMJDXsDkD4emNX7P0G00Wpzc8S0co4mWURK0800GWwNX100ubpqAXGi
uXQuR06Ylw9W001l6aHGGWD1H1nanr986qQW1H34Le1HKfH2XTyqi9DSIG2HGiqm06W0O0umW2W0
00MSXMt2Gmt04iYeQf7CHi5IX000eypEY7XfYOauTWbQbuWoROxqW267eX75O2G0GGjEPK2ijj5O
mRFH4foL1uHHS28LoW11FQ600WWB3YG00GImZDX4ea48999K2IICaaa8B91x401MII21F_aiai49
89AIII6aWa4r901aca02gBXu4aQMB8EgYYOB8Ae18UC8XeEO2P00qZ1GiT2L0200U5GZObmQGXCY
xfeW75R102qWae8999GQIIMd0C4e1KT2e089Bee1O8eXocXmWW7N2IG0WijlD3610WMssib9O00Q
RnsEa00WyDRRdj1Fs4PxRxW790RRR4309H1Dij00ea8cqsgJ0GAundiCejv04a46ImcTIGIa09Ps
6i9HI44ORZWEuneW10t899HG100YcaaK0400oJQIa0W00AO99undSOv@3GIIYievlF199Iqcw_tW
489yVv@FMwZW22US94800ejbj9KW10mrscTA010OIJsM8800gCJ3eWb21R00mW400aj7NG000_2K
hJ29BUaD_Q0YuhGBIIdwwAjmZ881w622YgxF8e1H40I00aG11H5cGWJCX408AQW62FYXW7pQS26Y
9p9X00033eGuH8y5G11e15180WOBChOoL2DO7G001280008000G10uGECEUK900000500oK1jjEW
8sYdY6mX55AOKMi8410K_v2p3WGK7IzDW1W020sgyB2000r6Smr0C4Q0KH9WGo084212H3uqx3B0
100uE1jYCUX13O8uadoYZXQ38uA06YJm94200@2Gmg0A4TJLW002MWGXT3I8uHdm2GIgaWai603G
M0IY4ja49198Io2oWwW239992IIIeWWa8819HM2IY4b4CQW22UyB4000rCOG8YH11000G00GeEYT
DI401002CbYF30wqa9Y6eXui1BQWhECmWn4Q8s2dA4WWE1IGMII2baa41B991F6b08AfwC88Q0A2
Q8hYDa8unb0c008FRRp0200eljDRXP10mwsijpW108HBuHeO9RR3P89HiiiDZ0a49K7si5K0aa8P
osE39uHeCdijv0na460scT0IIaA8Ps6XKHISaORZm8uHe0020umca42400GOQIaW0008DDHI2210
ecCuHeyPz@36HIYSfzlF359ICt__tYW89SOw@FGAuHeWG00WYcscGJ100PRRsXW00W1fPRX300ea
Eune60mwru8G000KN79an8Lf2GmwLA03008ioh0O304F@1ZcCHylCX800eSe2Y0dhY18080GGU24
ao020700AZBhu7OOw_g2rYWm4E8RW22uiX0dU280GGH0P4mPPnaj4W00WOoE8Di2Y2mX0qSIW00G
OOA0Y00u6p3YJufv7Ae322kYwWoeO822ce00W0108gG13I6uWxhgY00009008400020000100id1
101008800CmwJ7ubmOfA08008QW42Q09GW0001102HSXVSvY0040000ZR2B02m00W40002G0HT8L
Sf480000220Gq040200RoMiI56YrSP8GmfEmeY0QOgNuq2R1Z0RZA1l8EE8X0qgw7p3M79XW7jwK
03sd8XW7T2129Pd040199eJW3O8915KtKIWab89911IK2Wa44789B1IIYG6aaWe89P5y8LnzGGSA
6KQDO1Fgs00D4fj2V2KKq0b4y8MZz0Hq0L1440OIR5Yju9999fIIIKaba4q9W14III2qW79899r0
S1aaa0999AoGI2w4m0A899H3SGeEJ5qW4@GOGmZBXX90GootcXk00GBRRs24800llOR3810G_MmZ
GHM_s66KIYSHPR6P08IeebPBaa99LIcjTGWaaOxW7RoIZsc32GIG89Rs149HA4yPRmm49P4ajD2W
W7X2XG0WRQII8a200ff9x4W0X1D9T2GWi99XW7To8j@F0199oIi@_46a8n@lxV7MWaGFj@@GWW7X
21000IJPR25K00CfjPdY000YYaj5R30WAxW7dA@GgkAy20450B3CMfVUDdW6nNHGUKJrfq13JGmP
b6qU43X3W420000200T2GGlDAG0000Y00Gq0Hr00122002QGXbCLeuccYJW011000100Y6GX10eg
oF4_W81O000W2002SAAH000XXvmxU74DjNnpVM8YG4DmJD6aGSFD4ZvQHGW44100HW0080W0IUa0
02003aJG0VGawNKLQG05000G100C800Y3xBA000G100kw8XmmOA6p4IBSY10GgN028100ysI2042
0o6eXmnpgW_6ED8AH00030qG0dH5qY1nMGGmzbL1Y2HXTmQ2JbQ35h3OGm9FX000uSY466W01000
T1aGS2FrC11XIgGo184yuJHVcmg0D4yeJ3YHWaa450891IGIow4m013A91FA52IIIbaaaG599x4W
0D899KIGI4iea8BC89uHfw4OX2JLBuniE_SXSJEOKb2IS2gbEQ8QW4EtwWObsY080m004e0008QW
gY6nW0DW8sYbG6IIs9011FQW4aaaE180WaaLW6H1iaa4v98PaaAK3014aai9B994SlKXwqGG36a1
W11Fk4Y0009RRR6420w4W0KG00ujjjPO90q9011Fw49BRRO889ofijP44W8XKscj0GWaKJvW7do1
oscJHJIG08Rsfb9HA0WPR0449PGYjD2eW7X2C50WRIJI80400PDBHA0I0WWc491090WMoW7XoXe@
F0989oso@_aWa8nRfxVNGYaGja@@8fW7X2Q80WoQQR2f100C9jPdq400oscj5210WQpW7dQ00soa
4jeSp87cioOiX_0XgQW56kvXWJGQ4c6QQOY8LMY000GaA7iWb10I00608hR1CuF13Y60hq7E0310
GK27SjM21Eva0H2WE188jV22iqWJtO888c2KtWN3CuDk6Y9ZfBtW0600mt094SFKBNmm88F4W6K4
00P2781G200HGG502004G10L0S04m100GF0@cO5G000G000HGO0G0008G20bvoLF76qD0190Gm@1
84q0J20022iKXQ3I86cgW000G3308p03IJW0GG00XZB5W0W08000GG0000000K008QW66l9B2000
70OGe1Ebn011fcmQFJ4ORMJVUrh0T4SYJ2a00IDuWsDF0100GWjIX000080GGGB6iA04H5Qrf0F4
yeJnBQ0KmKI4a0a83P93UiWE1A8ekdM0e0IYIsaaW009P9IIIK2aa4C899B02I2n9y4808WE1W83
aj8000K3K202002HKg1BC8gIn6jHXP5E8OX7Y79hWJs280GG0QJ4RXJ0199x4W03991IIIo4caaG
PB9H0IIIW6M999HnIII0WaaiE1EWWaa5199Xma@Q0062US9eG00oxssC4200wARpM8d00ecDRxCG
00I_2U4AUYssG6GI4FPRp8G8H2b8DR19099ocijpGWa4R7yOJc0ssS0II23CQpE899ILaCRZ0a89
6GijH06y8K0100SAJI290008z99I0200aoa891900KZ6y8K_g@@1H89Hcq_td2a49cPV@R5Ia46c
z@7O5y8K0R00K1RRJm110WCjDxe200mWsijO200KA7yulP8wLPnzcCG8fQLmzLGqFGIjro0a80We
180400GaNH5DW180G0QeQXgW88VneQQXXe1KuunggCW0200Pn3mGca64VrJ800Y0a00CD21H3yG4
He5luJvHsGpVC4yOKnADseR9C101jCOGk0941nIG4004040W0W4eB148000MG2Lm0000K00yqI1R
WO0200G4000m800M@bBA000LgpGWWF57d255c0K00WGXbwJs3ANyW60E8atf04040000WG000W00
0GG10H3qmhne5Q0IPeQGd07yCy4H3W4400WGwQ8dZ3EqGgA6A8I5n0400K3W2bADHS2B10000H00
Gu050G0042008280WW7bA_t2w4WYW7T2fA9fI3IIe0aa88B9HM0Is9G14Wai81894XtJMIII4Wae
8999G2IIcaaW4A9892GIG2gxWu4MgUJ32uyWP8E866gYKPXEi6xQa380004Vr1Xj4Lq0GyO04nBY
LS2RrAn2jTOmP464luJGMIIw4W0MIGIaai4889Ar9021F2baba0999A0oI2Waaa9899X2IIIaa44
8e11DmLq6C4yuIWm00a@jjP0010qs_cjmk00O9Rss1010aj9RxiDuncO8QR31W9HijlDZ0049KYo
i5c0aaORnsE9XIIiTmZDP0HRpXW99iWWDxa4a8rGoiD28YaO8qs69fII0WW7R2000W3PII80E0Zg
G0a400fD99IG800bac4yuJ_lz@1J89Hk4ylJ02SIy@p0aa4SPylFQ2oW7V2QH0WAOQR28000ijiP
7MO00cacj5220WQRqs20LkDrBxRD0mStSe0800aKgc87cd8008qwa3dX9LZ9HKEG2zIQrqD94DmL
8400Y6uWLoEOWYl2Dm0G000TjJ58I0WZ9GeO03Ix@WW7XI400GmM54DW41FoL9cC4lOKbb61420W
W7nw_1B2qmAG000l6WG40441nIG02000O0q9m10120co5he18en05400mKSX11fMLr8CCCm1C000
2QGgG4D8QW3W000aL9LHwRm00709000G40mo5D4rXK0400Y6WW1Lyweb6ICWXG3O210GGN2F4DGL
VPKmJ@TD0G2O000_50Xn1O8u4c2dWX9GE8eXhQCfZeRMgjW3MWuW70C0100GmZE1aia49989GoII
4a4a8B98x4e00IIM1r55IpIIbaWaGfB9HG2MYiY4CeE24qaa4D011GBLd09y231xcKLG3CKNW5XY
wqc15KP03rWCHq08LFp136yGOBITeZ51TBMi5F1A99HIIYYWaaWE18WWaeMmZO9B9912IYYaaa0J
99PT2mGmZJX008O60B2US90100otssCW800QxRpMe000eiDRROV00oMijTs6yOJiijjx4W04ijHW
Wa4Kmss2KGIYQ0QhE12fW7VoGosc3GIIG8ORsfa9HgYir9G1ePRZm0994yuJ20W3w4m0jC9f0G00
asaa8e000KQJImZFvN_@7iaa4Pw@VV24IauDy3Ua0mez@_8093Uy9e000gijj9KM00m4qcTG100O
QRsMW000g9J3eWpnbQ00y23Jh8XAPD1H1Y00Kn95dkbGm9C90080m000200WByc8W6f02000900O
5Jio6eXe1KW800mGGHbn0122000I0043141En4408G0001H3OHG3Lj0n1X4OGOb94yeKr5CHq0Fb
Z07n9aa0000W0010300wvWWFyCOfZ4YWmfmN9GG000W10Wb0KuGZe65uWj9CuJMmMFOZn1GAhI3w
4WWA4RuUagC400aRJ6XxnaW0WW4T23G000WG0WZar8uHO7VmWE1SuS92YJOgjWQ8K342E1gdIRux
r32u4hE1I8js3YXXXe2PY00G000002200PGqGmZEXWbaiJ020Xa48999JmII2b6a419B9o22I2gx
94iaa8109XIMIYW4W4P939IK2Ia4ai09B92U4g96CeJ04oAqYx0nwBA6E7W9W001Dj4ns9FLTb33
WFHe1I5ZfNW000QbGX8LKG000Gi5I999H1GMIWaaaC1C99nBgGq0D90IMg302WIJMYWWaiJ028Wa
aq901Waa42dOhW8W8unbWH008xPRpG00Gd04W_000jkjD3B0WE188uHdO8RR39B9HkajDZ4W494e
si5WGaaQQpsE98uHeimjj5y81aijTWcaaI0qs62GIYS1PR65891F2500uKC992000Gqcaa2O00GQ
JIY0W00G9991F_axv@VG4IIaDz@z909HYNst@MW49XRS@@HI1F25m000qYss4A100OJRpEi800iX
DRBW100bskj50AGyq10_Eu86o1@XgjoAOhl04045QY1jdDHKKL1800uW626ARhA3C0K00m4QRb_m
1RwOmfE7CSW1nNvKmZ44D041DG5W00WMnTg6WIMaZXe1uAExoUdmWv1I8oBd4o00W0G0e547YACA
0H00Xyo620000200lWeGhjFC0GH0B00w4GXUC9uMsmMJGXjwE8S2gECGXe1OO88kMWWXG3UwJ08M
l9Xe1GQE33w40XxZqQ28AIC8X6JM2G00GKkEy0W1HpQGm9PDpG2jjOGmZFr9W51Fw4YoIIbacaGB
89x4W0H9991rTb483BII22a4j48918HIooYaae09998GIIMWWa4YJ8C0220PKvMu4P1K008TSAMx
Wi0DmQp18Y6mh0DE8sYbw4u03991IIIoaWaaq901cbai2q8gE0C0AB992IGoE1GWiaWLvV64dGP1
Fw40400PVRR68600zijPBe000qocjTA410fR1F25BRRR8899YbXiPa1a8XMsEuH28YssgpIIAund
i8bjvKWa4cGscTGGJaA9Rs61DHISCPRZW2890GmZH199HG8002csa40500IQIIaa400g899undyU
@@3YIIYy8@lFZ18Iig@_t4a89iDp@FKAune800rWzj5oG208qcsE0100OJQRL8800ACjDuHf60ej
Hj0x1c8A9xgAuZO0WkY@jWE4DG2000800083001d8LtC6W0W0Os022Kn08100H345100WPffAjbF
cXmWcWgQLWCYlgi88a2A0Gm90GO0008UHiU0uW55O8QWeG800Suq5LKKM44F9208ukh3kvbicmI0
280GWjSLjb51duKd0A0I00umWn2QeWdOQ8agj_engOEIe4p3Q7uXWjABQWdwdHjuHKefMi2UKXTb
EG0008G00WOCZgJ04U8eYeRa2800GLKG4yeJDqT0i4a0P99PI8IIw4W00IIM1r5502Ios28GNIIG
GTA49f111vsCBE5rXP30a0900WE8EOu0hILe00200a000A60Yn1M2W40Gd0IqS12HgKrX6D4RXJZ
0O0KGGoW7BWbaeKGgNXaaa4P99Pd048B99JIMI2jaaa0DK8eXd0G04KA04TROGmZB1210Gs_scX4
0WE180D200QBRRE2m0T2GGmZEnmts6IGIYOPBR6958I8fiPBae89HI6jTIWWaOxW7RoIKscJ3IIO
I8RsX8DHgWijA91Y1kiPKce4y8K40WJbaa88000HIQI20W009f99IG200rqa4yuJ_lz@11f9HMc@
tda449UZP@RIGa4kqv@784y8K0100KNPRJeP40WfDDxWG00msqijO300Ko7y8mXK5s1EFameQZOo
5204WA3KG0G0GeEMTvL2h9CHWwMDqWMvLVHtdND0m22200010888008mflY6WXerGBcib01004Fl
2V3KW0G0Wi0G8une2DOXP8U8unP1W004Ha3G004YjGg1DiudNlI7GXe1I8sYl219hP1G8KqjQbeW
HJ0BiW3QQ9ZW6UwjbBYwWgh1o8SYf6a3XWJmwSW8W00W4enNj3mGm9E9G00eFRA2UCgE1EG2QIa4
4a4A9992GGIabia4KtJ0999x4W09891T2yGmZt61X2vbQ0880WGT4Rva3Ax8ie1c8GZfIIkYeEg2
800IO4A4lOKT2G0aaaWE1A01A9PmZPXaWaiJW281P95en3nNXcijjD7000WsssoQy0A000DEwHmZ
R080ocziT0090wQ08040GhMtMXQ0CWjjjDbaaaW7DGIjjTZZbK3W6CjbjfW4b8NsscHI2YaQRPs2
9PIIij8RZc4yO1PDQWLIIoW79GIIIYQRRxW7nno6scIIGIGR3QM990Hgj5Oxaa09rsciDIIsa001
FM06000maaa8700ARa0D0000IIIaC004yuC02WJamaC000WHJIIUmZ4GAIQ0W4049999@@@@aaaa
O@@@xJIIYK@@l@B99Io@@_@ba89P@7yuCU@t@99P8n_@qtdWa4f_@T@NIYaal@W@39HJo08hH40Q
RRpM0000kjTMZ44y8E00A0KRBQJW09eJW2030kP3R30W40bj9jbV1TBG3hU2JYe1Gh81G70uYwB8
0400Gs0542FQD7OLV15q9W4Hb5ridn5I21n3aW040W0dmAQW92USsQ08ueXC2G3gT9s8E1c0804K
bA41eD5030We27RXg30I00C2W3Td8rtL9SBW10500Y6WXm1KAQ02YJGZ0DcQtl6Q4ri10aBWcOx4
mYkOSBu4doQkZu4sga05YAiiW7VIQIMYab450991IoIoaaWaG99910IGIGTMr9W24a4b8D90HIJo
AunuYW8hwCCOyc760Gvu4agFI4g5mXW6iwr46Yju9P999T2KHW6G9B9BfJ070IGI6y8Sssss2US2
s1001FA30W00RRxRE0010jjbP30050qsciL0080OR_sERVJi0vsssCJIIoQa0IIII1Fk3RRPR891
9ojjaPaaC8XsMYjGIWb4RxQ0A8hH6Gkjj5yuFss0sKI2H2QRBpA99DojjeW7D0s69PPT54ye1W89
93Uq891930G0Oaa_a3001GIoRId050aa_FuH4yB99Hw@@FunVy@Z@JIINYz@LlV990I@@N_la409
@@x_7IYba1GMZF4yuFW6WQr6s20090KRJQ30W50kjDj20W00rso6y8l2W00YNaX9RP8gZf01004y
8PB3A6K00Wr4K8Kd7YJW9W00Ht5q0100We1gAU_3400002100W00menLKq_H3kPGu4Iqs5O1FEL3
38K4G3C0002QGA4G00nBMsF0O4SFNnnnMV684v5K4W00Y6eY10MgC32gaaWe1WuQWe0600qq27no
sKS2G41XL02802e1XtpygNc3MkvB240060002J0ZW7FU00nUT3X6JW2404GiDSKTmIDcqHqDJ5ye
N2MIIaaae81998Un381911YIoAeEfaCab818HHIJIWc4ai89DGGIUYia4aW7X2404Gd044_06HUP
r00R1600ux06_pWXfRYwOW6c3qWu1G86pl2EniDgA8kKeC9995Ng2AH99x4m0ca091f6bab4bQ08
Wiab49BHf89J8E1h258XW6I022Go704G02200000981XPa80819GD0EG00ae6WM8811K3G4aW400
400Hm22006009u11006004qW8002K3038009g1e52KG0r00H_a90QRRpM00G_a4m0000ajjTObs0
10ocblD0010Qss@M00H0GRVPp10O1ajjKObAaFf2KRRRr9995MfDARRa829ngjbDYa0aWscoMGIY
G4RB9r99G7M91E9991jjjPdaa4fsssIcA4MfDaWjJa4aOp6WsHI0HAR39R8989YjbePaa64Mv1G0
000IIIYK00eWI22Ua0IIIYXLM340u4f1920G2Gaa8a4M914qa4089GHIUJ8Vo4y999bF91C9991@
@@xdaaibIEg1G3d@Fa8S9vzNvVYaibm@VqFJo2Im@Xq_891_8WWy9Ju_12msssg0008ioSW80rgf
i50Wq0esMmE0G80ORPQL0Wi0gj99iot600tX_Regzhc2hXWJE8M7hQPHYy1GeEefUDeXe1Ywmj2Y
xvX@ZeAQ02MWeXe1CemqmY8YXmnvAy8sYaqhJ6QOnICM2uWu4_P428ghxiOoSASS7Enree1g0m00
mf9BadW4j_IMi5GzgW1b3Wnc26rKv1nMeGn5B4QW1H3C420008001XLEs9gI08208IouYNqfkl@B
ati27GXmzm28000G00WM1U8u4c02014Ua5XL_Kd0D49v149B93hqXC088SFX4aae8989GI2IMd08
0aiaCpi222QgNGAeZxkc0WWeE89vaMUgmawEq951NAreYGU1EII8eWaa4RXAXxHGD060899f6W24
saa898HHIMIG777GGI2Yaaa5989XmAh92W2g1GZe1Me602GGMI6M9M30KHmZn0300e6024000Jss
s0400GD07ujjj9DW3043GpMss20a4Gd05018RtssPRmZpmmss62IIYOPRR6P99Ieij3Ua1baDI4W
aSrom6Ho0IeJ048Rda899sEunPCijjfmaai6W3OQRR3199HCijDZWa49ijaOxaqi9qs2iTIYmaQh
Kq6920IkQ8OZ81594y8D0100g1W01000QIII00000D99f60209990044m99D94022Waqa8508w4m
040b489X@3US67@@@r0G0@@@HWaa4U@@@HGIIM301MIIIy@Oz3IQGYy@kkF919Iy@oytaa89y@J_
FIcca0GmZp0500GDjjD12000csshGG0sssM12000ARRr208HWQRYq204A0iDQQ70880sijj5046W
oMcsoSZ@V9PdtHHMqQE4SYMH3qLBTOTb04H3G0010WZw88eEhYH0ZLyA8mfbG000q9W61D05280W
OoMB204IOIX0qogx99YJ0dE9i0100HC3K4z9NnK_L@XGKFmPH3aGu0kST88T2KmX1UjaW2R4qGyl
8iFGI5gKGmZI4CiDn9inO1J0G008U4fkPGXwBg8QDq2oCiX68en4SQpn21012pc8H0qMr9G17J8H
m95D883T2mGg184yuDAB993UK4IGYGT2WGGTsK3W1IGI2g1mYE1A8un4819OHI2I8EXRQ4_Zm76Y
0W0G11P4b83P0SmK0E4GWG@ImGxH6azYDH3mIyIT4f2FNfmGd06W00Gea4h6CWXE1SuD43Yj86GI
G2r0W1I2WaE1CGoIIWacaiE1K8un588195enB0D99h101IGIGcaaa2qG19B90T2q0989XWJoAe19
2UC6W000opssC800K301G000GTRRJm00u@l20X0Ppsp60040DRRVB0080ejjkP00h0ossAunQOPR
R3H99HCjjzrY4eijj5iaa4nqsMD2IIamssaDIIYbSRJo6990IeDRPBa8P8riDaTYa0b8unRKGII2
ARRp2D9PmZFm0sEH2G2DR9Q79f6fijDiXaqW8tsGUT022Uy65caar0S04000e899r0S000I0da4c
G0010IIMXK0040999L200W0baeDX@3US6V@@@WXaa8t@@N301k@@@HKII2E@@l602y@hz3II6Yy@
7lF99HIy@NwtaaG9y@puFIY0a0GmZseYssk6022Uq0Cijj1FIWjjj500f0gjje900o0mscWT00e0
ORJmM00A1gjPJB0C0WJ5aym005dro4bELMbwO1100igAn80000120ON0CY6e91G00TLrmE3LLmt4
BGS5W20WngZu2Y2Yzpfu4a8oBUAsiZuvXh60n6y6ZWWkgZ03M70XW7XY04000000G200r2SmkG4q
QYN20008000agq1zfmMG3C14188EX30a00K23NvDO0300WQ3K0A00Ge10T7m4d0Kmq9D4yeDZz@H
n09Sq01F4uGiib5yeMH3Rsp0BK1G1jVGZW00WMRk8msgYbjbeRWgJWA2UycIvY8Ek3a8aaqGt2AH
99HIGI2aiaCuHRGJIIMG06QMoIa4aeK301Waia8O9AHIG2gJ022UCdQ0uG040O7ZPalo80202gJL
n9JA8y89s0WWgkN9uZIMJmXmAXgJ0JY60gx7KeB14Yje42IIIaa44IgeW0DS0IIIID054RH2oQII
QSi29GIIrQOGW6b80999Q07iaaa4eX2iaa4c3WWE1EWiabKD04WbWa49P99oI0WWWagJW5IceXW7
Zf60H82qsgkj0080GRd04W08RppsPRmZpK3m6QPRa818vgjiDYa8aGD0509rscaTI2CaOxW7df6W
DO9Rd8f9Xcj0jZa4WKssGsGI2IaRB8p891DunQg1O381m9IMI42Ua0AIA0T2S0IWIImam@1FEJD0
RuW@Xi602qzda8A9_tc_RID04OwFIYXa0GmZpK3m602WQrcs200J0KR3R70010ijjl1FM0HQ1W10
_lIbKEEvWgECuUHgsZvWlPM90Db2ktc0Q8yB12G00G4QG2@9OmY2I5@WM1AuHe1B4u4KT2qGS2E4
1HM06002UiN05G01thGiIWn00GeZW50e004WcK04W0YmZWG1QG000muxqiU59H3i0408WtCsAeXm
sBWWE1au0DLYXnbO1I0W10Gu4O5oM3HDBsbAD4BREXk9ImZi5piMX6KmlSIyqO1rdCrn8HCzv11Q
0MWjLr9021gKGGTB4y8Dr0aX9B99IYIoiaWa89P9H2IKYab449O9BIIQ21FIJD0U819HHo6IWa0a
iE18W4a449P9hW7b2404GiI7y01530iLTj84rHM9iUM5CM4y8jH5omF4A4RXKT2u022GIiaba1fQ
JD0Q0aaaiJW361mWWKB0BP99GI0WW6aI240mu4L4y8JWKWiPRP3q901URB0g1W0Vx0e00osajTs6
yeJQBRa81AngbjDYa4aWsMsMGI0I4RBRr9924y8KaWjJa0aOp6osHIHIARBHR89l8YjXaPa4a4y8
K0IWJaac80810HIGIIG04GwGI0W0059D9XW7VoBz39I3IU@c@d8P99y@q@pa4i4yVPkFI2oW7X2W
2KhscM0030WQZVx0041WjDXL1W20escsW7D3W00KrZBF00QRXHrOF5aOW2Xz0Hl1Fr_G2H3q5180
ek4C0e00ms44SqWMX6Sm_P64DmMzmKGyLd5DW4H4XM9ZM16008Q0mYB5jczYG080G44FX0020G0G
Gq04SvL3@pGG4CL5HI2FsUMh15SRW2X8Eb800WshM8MshEh5ZeSXAOur2GBk3YOukbg2xXguUUuO
W2AQO181001FYLPJDy502n9q4280WW7FY004GOBm4y8Kaiaa99A90I2IYia449BH9IJIGaqai2gB
gE1M0aab49BHfWw8eJ022U4gE1CevLnMe1Xkj4CuaWh1XX0d4BUHiw4W02IYIT2WGW631IIGAIID
8891HIIo2a4aGS2cjJL11Fo4408RMss00M0ePBTRL301wRR3001GgzdjBundKss8H4GoLBPR49J8
XQ0A0Igj5Pxa4G9ns1Fw49PxaQ080Oxa429rMfiDI4aaSr0s6H2GI8undW00d8T9H8uH2i8f0000
IYWa40080AI8J21F_aX_7IKqay_f@FH2SIu@F@d9P99u@TUVaCX1F2540WMDjj00o00rcns10200
RBRh20j0Gjbe1FELolYD0WRX6ac000Wy4mR6642E1gjmOOB8282004DWNW000M9wg3YA8q05G00W
sC0LO000w2ZYu1A8m9cW001q9m1K000YWGim_h8cCeMB0Z0qaAd12kweYWWo2W000W40WeFb2404
0W8WWM7Lu8r32gpg72AW600G3Y9SaANa000Eqm00100H3aGmZJz1X11DGGS2Kri73xSCHe191C00
eJW8sPWgG3K0808GydI4iLN40002EPhhIDBoW2MKmWB5I8u4c03014om1B3yGr1HrOI1F4KHKXE5
Kd61FwKSS50I2IAEk4O39P5yeKIGoIw4G1QIYIaaaWOBDPH0II80wi600kI2Q8g3hkxHXLYQeECg
0I00iv43nZWMq0C14088uHw0a4a8B9198rfajaeq9W2aeaWw4W0ba001DyLzC64EH11FA3108xQ0
k0m0aDRPRWE18mVR9020WMjlj10b18rMos5yeGosM8h181oMosGIWIaRRBp891H2jj5RXaWW7DmK
IiTmZqWssAHGI2TD0KG2sEHQG2DR0R795CfeDWj1a0c8t6YcHIGGmZ6HJI2e6W3W40t8f9H00G0Y
a0aK0080II2I40W40A9z9uHRq@@GM3G32IIuh1u0dyFWeX9vz@xVYajaG@pyFJIMIm@5y_8903Uq
620Gjr0OWsts60800r0e02G60qsas40GA0OR8oE1850ij5QB0KC0rs8j502Qfh10mk_cewyJX0rR
8ynRUmWWi6g9s0PY6WZGur8I5eYwn0G000jKLHoMGr2aNhAqGe1C4u4Nn9yGqDJ59930420Ydtgy
7UOg13Y6mglEQ8mfj4800q2n3HGKpNeD47932020w4uWgEE8PsggFK1G0W000040800aPBN20001
5004DW1nZuJS2NqBlSL6amf1CKG0FRHmmz36q9G1H3KnCoJ9200e9032D8ee1o8Wp5gRmdl0_u7W
3_WWjq3O8uadk58XwUGm000GvD8SSmBv@Knh2X4L8Oj4KGmZr889Bf_HEWIIM6Kd22IGI2USg80A
8QW280P9r9W1HuHGmZJ5S2S30qmtU74ktLDZmpO25aCq1@MyHq0J4aAKxdWHq0ty6W4@2KG4h84U
m1D1KGi5u8891HII2W4aaaW7TGQIIYaa459391T2G089Hef0AG6IIIW6gW0aai602WaaaqWA1898
90IIGM3G1Wa4aY6m0IGI2T2SWaba0819PT2aWibaaW7rv9dDw4eWYDQeGX22UKcQ001800DRVRhE
1E0e80fsoskW75g608819vgXbDY4aaGD04WWaKpMss9I6IYW7hf60D89Rd899Xc5jjZaYcKsMssT
2GWcYseW7Hg606w4W00118I2IIx4u0020Kaqa42Uicw71nll@9IMI2@Vz@T2GWli@39X991FMJD0
UuR10640s6Cj3WE1C0e80bjfjbt5REGTfQ9JXZZCeO0j65ZaWApAsSqY6ugmT88rn6AOiA200GLJ
0HnFWKT@HX6OGyLM5DW1X6GGq084qmJ12cGlYJL3G3v0CHaaRLYrO1eHc02001G001Sk0408ay5j
wCZ84000iToM41002Qei3GQG800Gqmx6wcUX6uLmZ1rMmA@MhLW64qBG2TtmGZ9C14028u4dx40Z
W7hf6WFWII2YWaa8Un40IMI6yOKT2e0D9BfE1M8uHfw4GZWJAkkfj2RPme14Bs2hC919r9W31QeL
mZB4en11DWMmZC1I0okJ05020qgjjT0800fssskW7fIijiTD05O9RXi6W2q9915y8K4ejJaGaOpM
ssHIJIARRQR8959YjjiNbaWW7hgJ02C990020IYacaGd054y8KUxV8HQIot901GIY@zy@c898Xtt
_@XaqaaW7V2a0Kh_qM0010WQJRx00i0WjDjjJ032UqvOMuY000GvySDVTBnmSwrYQ4J6q30KMWJh
5v5QnBMMD0HX0G0eY2rE5GY88WY040GHkZ5PRT1Dm505WWu4eBun@Zk9pU4qBmMYBLXXW7jjXEB2
gJgs2MWcaWKmZ57rHPZEYMq0T4yu@nBIId0889999unkYwuXW7ljJ09u0004yeLr08Hd044yuJT2
K0ijjjE1Ke6W32UChQ0A87222UigE1gm799PmZGr9061F_@zykqLvonNzNmZ@7yu@1F6S55_5v5j
7TSO8Y@7Qm@1F_VmZS6SIS1F6Ld0M4K7R1F_VzM_s9GE5EKHmZ37eXS1Fcf0000PRRRc000g1u0m
sss1FgHd074yeE2jjjPWaaK305T2GHmZqGRRRJ8999WjjjQ0E0JIIImZDq9041F64WIIoK088uHB
w4eXW7hX@@@VD0Am@@@FuHi4000K3W22000Wsss6yOf@9_S0D@7CiX30WuRqB5uK7H3SHmZ@7Ws@
HUzOmZ@7Qm@1qyVuhT5SoYREjImZOIYIIAun@ZX1nWJ_FuaD3Uy@W753WqsMZZHK@O41F2aKQRRs
099I2ijPRXaK3G10III4PRRN@O3Qcaa2Ua8RXaaDEYWijjDbaaaWtssgVCYW7RIA00GD040400e_
HA2UK77IIIau@@z799HIv@lnH2GG@@N301a_@@hVK1W@@@1Fw4asss67Re_H72Uqp10qEN22caXr
Wj_V00F3SQjW7@Fun@3Uy@uHq3G00G0Q@7Gp@1FURQ0MiVa2nMSHm9n49f61FsKZZU4yu@Xjm@Mt
15yu@1F_VmZgO700enn3WORRpY00e602C1004yOKr0SGmZ6G6RRh6024QRRN301ORRR3Uq0DIII1
FwZ1III4ORR1FkWjjjDXaaa0sss2Uy0C9991FUKv24que1GIII2UyW0Q8OKH3maaa4y8HUaaa8p@
@7y81W@@@TGIIY0@@l605I3W0WaaaW@@@3UCex788uH6q000S@m22000Wsss6yOL8000Q0gZ10_F
mhbYaSbB9T0400m7D501008WckY6WWr088QW2s60Y0QsAuW22U4sRpzO7YG2SAbe1M8uHtYyAc_n
kPu05YWGXW7@Fd0702004WsEhXyo@LJCXLG30qKe1A4q08XywIS21zaW2O000Y4Wcm9QPt0263eX
mMKvNXHsDnZ0QmQCWE2Uy@WJmiOW42irfJWQ8uHbG0IIs3720999h1e0GIGI1Fk1YIIoWw0I2I2I
D0C08999uHioBKZE1keiSt2dGZl2QO305MWuY_AGQv4WA88cEE4vaWA2EHiRAC8s2GQ2WWu5nWia
WKmZHH2IIAQ0B4caa4Dm3aWia2UygWJ09uHGWijjP3000WqssbV8m100Gotsc910WW790H000EPR
RI0001FU4RWaa679GXaa49WjDRpba89Wsij11Ya4Gnss2eIII4RRR31F2bKYqMjL0Ia48PrsY9b2
G10JII4PRRp0999unWUJaWW7JG24000w1fQ080W999II2000qa1FMW999XW7xnXaaKD044yO28H_
@zFWb89Htt@FGYaaGM@@FBGIIWz@@F09999uHW6UWWW7L0J00WIPRRY0000ejjPZI000Yqcj11Gm
ZJD0m@N@QMWw@VAa4r2fHR1ELOKOHh5HSCg4eUC1FQzw0KqSsM7ArGQ0JiAb2XKTIEUDSIb61evK
KxbT6O3HHYpw0z42Vf9ZiXW00WDWL9ioRk5WWe1ce7XU_AGYF1OOLbJ2kNvW7PjW43QEvW0RBDu4
X2UCb6wEGGIIIZZ7KoO5T2W0AIIoWwe92FEg1019899T2e0AIIoC088unMUIXYu4W8Cv6wUOcDRO
eyrX2r9cd7x8q0Nw2eXQsFAGZmIUuWeE4BsYF8889rNH2aWaWYjG1899CnbsID08GG2IAQW70III
saX2IGII2q0ae1w82Z3G00Giu3DLNSHmZz0IQRRiF2OORRpYW0e6W2u000poss0800GzZ7eljjfJ
W9u0004y88NBU0Xaa4DqssC1IIaGORpM49HI2Ohss68GIIa2RRZ8B99WXjjj_H2ajjD7ye54RRR3
U44jKII1FU0AijDBXaah3SWGomMjb2Ia4SPrs21HIIiKRRpa999MfjjHKaa42UKdGG8GIIIJmZCe
300e60202200Wqa490100OIoW7BWYaaGmZw0_@@dXaa41_@VlIIIr0GW0IIIWmp@r0G0fh@VFIGI
aut@zF89HIm@t@F4LmZu0mQRps3000OiDRR20r0G0x3000aqsij3WI3m0800WQQRR44000DjjL06
00W6ssW7l9xYLQCYle1YAciZ_D3jWMY9_ATEDHXT3K8505QbHbg0CvD572UKi5VC8uncY1gXG388
L42k18X2aS9m9EY60ZsCC8Q0A2Uag8lY9x3GoOG1A000f141G20Wylkv4W3I3eZy1E89082GRJ05
001FANk4HywrGvgaLiVPY000eR75g0mWu59fWWO63OYxoEQQY5AWuWi1CumZ4YXeXbLk8q0GA9ob
WJ_AgTG2USnu4QO302I3WYK0C8u4QI3GY5GoeG062EfZmdE9H0208004yeEA8993g322MIInBg02
GIoW7N099990IIoF6F8un92gBZe180O99PmZNqGd2npJ0IIIIXaaa0f99Z6G1X9991FsGq0H4@xd
3Ei1W0WWeEcH000GU1HC2G2dc8r00CGY008b4S2iLm8y8uIDO2UScOBA0IIIIlYH0991HIIIm806
K3m14aa463W098981QK1899fe1Y0MIIIW6N8999HAaa499P9I2IGr0O0191f897f613255dW7D2i
PRhM2000Cij1FI08ejDxF00ZzH0P4400aijQR0100msgjD48DW283000mssEun8ORRR7yu8M299H
cijPRWa49fqcjD4Iaa0Osss2HII8Wcss6JGIY8BRR6899IWjjJ3W02bjjQWca2Uy0nsssCIIIaOR
R7yeAa0QRr629HIGiLR3W4994sR9BG3OPhsg99I2ilQRnW899qEHG12ijjPeaa4yu1msssiJIIY4
RRRT052Ui3GMIIaM00I1eWW7B0X00G604812000ja4911WW7Be_n40acaq9G3r0GGN044ye8U0II
aGy@7y81qu@@z799Hku@tV0a49DHF@@FaC99Xr@@FYWaaG@@@FIIIIWl@@U8893Uy6GMRRs4000G
XjDy01GZjjP1000WXscjfK000WKjjj80000qsssO0000RRRh84000jjj1FUpM5OitJ3Pguq00RET
GBBdjI8Qb5VbOhnGm2AI4ns5H3SI3LQqcZIlEuGl0A4AwKL0nmmPCWW008uHWY6031020H3SHmZz
qAW1bOWIxK05Dm2r0eGHSGaOrDx00nO574VrDr0anX1AyzXGHGC2400WwDMOp0BE9uWE1WeEHOW1
0044F27y6M4zQ4ibOXJaGyYaC0G7K000o3zYO1GOJgKA8mYyTZOc1CY6uX_n8AHW8_ojb22_9qWK
Y68cRBqA446gjuZ8Lq9Xk704014JN61sgqZ5X4OxBW0W0kMBZW7r9eEA2UCX1v8e7k54aabK3G2G
GII2Uib8ysOCo40aaaq9G1IGIIghh1GIIG1r9ImZhqS491FE4W40WREOuJ05kdu14004BUSHeEQi
0n4LZGHS7yqnX1DjtKf2j4QW4T6yGGtojXW2nMOIyY74RX1GWaag10XFB8WiaWC191eOBSWW4aKd
05G899HGGIIW6VaYH1DEgH118GMIGAunI2Q8jW7p0GPRRD048PRRp60008fjjn_8WXjjDR4000qj
jQR032Ui0X000WjjjlyZ0bjjDT2CHmZZO3aa4fnscj5IIa4GRss08HIIZPRR14999mrY4OIIYKQR
R01991CijjeWaa8sssgPIIAunRqQ99L30108991XjjPDaaSG020aaae4ijLRXa4916MjjGGaa4Bl
581QII21FQ30B99I2000WWaUJaWmM8G000GPZ60WGIg6020OIIc201OQII4W0008999unRy5aa8f
v@t@0IID04uJIIg602k3W0z_@@eaaa8U_@x1IIY4_@l@119I2U@_@Xa2U4dQ0EGZjjDJ00WQ08G0
00WbssM940008tsij82SxP12200Wsss6Q01cssM2USe10qkmbcoWSZGG2PWol27VaWJA9Q0Eo1WW
M369QWE_cBYH1QeVW9wiv64000dCem24H4Nga1EjMf2WqbG3e0002Uqh0DMe6W6Y5eXW7l98kBYJ
Wgr4KO_iBQFLbI56PvJ6YQtCG400300QWwejvhCdG8n4eaKGG6DYMJF28TdY1nspI114LeW41eXs
Q6z4DpAHgSKD0AaF051FUpR0TqH121ePIm9W4yOR4aKaQSyXQ08GMIIITT680999unU81895Xt21
rL1891fWwC9EXC0I00qD4JXZhPCkfC0mFH3aJf2q4fY61FANW6D4RH6aWaa2UqX_AK0899Pv5Q4a
gET2qW689fQ0k8uHdwI1dW7p08PRRD04GPRRp6000WfjDR9000WmsQSSXW798D03kypWW7lnM89v
RY4W899H0jjDRWaai69GWaaKZZDa6m14RRRr899L3m1T2qGmZZefIIY4IRhsI89IIWjh3G0IXjjL
99GARRhsA9fq08m299PZZEq9W51F220A99IA00f0KGmZ90899HE00GD04Sk01ZAQGD09q9W61FsX
lXa491@@_@GIaa6@7y82U899Hm@@d6m1UaaaI3WWQ0I8unR0QjjPR00OuX302RRpc00008jDRR0W
q0Mu_12gVq00jjj1FwRCQ6i7ceNpCPWX6WW0086cU_PYWe121G00Gq0G4jscRDIOmZQ5VrEbAiKe
X94JMKr0iLM17q90DnMWM44Z0400euF72UaiqJIhA4jEWdYr4r8U4foyoYe29DWpB7TuY0QQkB5q
gSXcWJSwP4D2Ui9IKIIzmj1G2IoQ0802IIIzZG4KtHT2S0OIIoWwS98er6AyepLCW040Gj6oaD39
nS0r5hMSfBBnZWMmZ_rhe7r0S12I2o0DMg6W58198L3G51FMKG3q4yO6r0S0XjjDV000DEUW0RRR
o0001FwajHIIa6RR1FU0BXa498ssibHIaa5s6yuJDEU04IIIWORRM699RSSXW7ZgnH3__X0899v2
0004aaa4Y811F65v@@VDIIIiu@@zE99H2u@t@Ea491v@W7Vg6W3kVm0WmssDEIWWssMf0001FMzF
BUD0WqBb4ICC7jXoE1Fg@Jfx4uKBd0SGmZy5FlMr0muqKD4y8YHULNWWqF00CRWbHC8S4rnCH3KJ
ZRR5WMkX9GIR1tyXAIdEao0IB4Oxl114HmZDL3019mP0GIIoUuE0IIIIyY7Koe61rzY4aa499181
rT1aa4aW7PA4aA040043JX1scPF2HiS2Gnb6JS2fjnT21Fs4GIIs_AUGGI2Ii5j4y8AH3O0199f8
919G3D2U4n67re60DWjjjr9W31F_HZZR4yu9KRRRL9995y89DEIHmZZWGRRBunOQSCYW7XHA@@Vm
ZQquO8r0eXB99fW7Ru6222U4a67x8uHIWrss6y8x30yVmmkF0mqn_jMmZhMqF2DEwa200W0quDun
vZW0XgG0BQW5w4GdEju8AtrRdBY0Q_FuHeg1mfWJQEuHJQSaYQ0AW4aaKmZ1rGt71Fsqx6O43JSF
jaHlXL455q1deSi50j301nMK189Af0DkBuHUx4G1E0001FM6nsssE188uHjw4GXW7NJ2@@VmZLr9
G3_899@8WWW733KRRRmZ@tuu@5uaNmZ@7yu@nazMD0_iU@21F_VWj@t9GN88002Rfie1weZJ13Uy
@W7@FunLh1u1baaa1Fw4GGIoe1k0899PmZ05PS9A000wUWf7TWO12504044E1LJdSOmZ@thO4IGI
GsTCXoBSe6042IDlW7@Fun@3Uy@10_Fun@3Uy@W7@Fun_pe3YW7@Fun@xIvnw6WEeXeYaylW7@Fu
ne9R99L@u61Fg4P999I0II1rzICCs24048ua@3UizQ0o0191PGgBL3m81FI8G0WsW7H3f9fM9Z48
89iDunSg1m09sss1F2X9XssI6JW4aahsosCIoIY1Fg3ijjDxaaar0uGmZX91008uH9yz@cKo81w@
da2UiAQB00bC21VR5WW7h2400m00@VCJeW20060W52000nmOproP4D0CHhPRe1q4yu@1DGZ008W6
7NC908YJOc2L80100GO8YLGm3XLiG44F1G00edkzcK0aXsVvBW2I5WYn6qv661ZKvkZKogWW7Y6u
dWJy1200m5HcMfY61F_VmZaGG2IgwD2mYIGMz61sIIIaO995ye30IIIwXB1IKII1FUJq09GI22AQ
W24O99T9011rHJmZS0200Ok29Y@zpeEa9@bNUdicW7TEuDU2Ui4IGIGaabiYNy08998nMSKq0OWW
499unS2quYW6C3e0aT9ZB02QRBunOW0jjL3014ijj3Ua3DjDIamaStHa04aGRssK8HI2gLoe1DEo
XbHIoQ08WGIIImZfmYsEHIG2DRBJdW7Bmo899pojDQRca89nj3US544RRr0GW0sssW71X0Wa4P95
WW7NXq00GD04W6008uHJyt@GYqaat@rxP9ZBm@VIgnnGaWy@N3014u@@TF99L301Q8993Ua302Gj
FEKW0RR@I6D0z50W0WQRssA0DEk18gjjQ080XjjTD0Du5008uHDMKYY0L4R00rMYwaDpGw5AgI5W
YBIIPs02IGmXx0o0240G82HSUIB4000cnfaL1OeMKXYMBmW6Q8q0TEeu31002n9SHWJl4DG11F2O
E1KC5021F2Mq0@4QG5hAKGiIEj4n52040Y68XV1S8qWKoZmXG3q8E460100Sf29tnSJ21DCwHMp2
yGq0@y7m7BBOmIcTLGG1H3eGs0@4M9jR4pHm9eD008BTmmH3SSd18HgmHi0GSrH11FErl7r47o51
FsJAIEyIW4Z8WGmZP0oIIYaea4B9892IMoa44bgUh0O999nnHGZZO8B9Bf6058198L301P0GGmZT
0IIIYaea4B88fe1809A1HD074K77p1GGGTnGW00ew06INWXW7pQxfH0101KZ58H3a1W80W83888W
48400ylnFhY8KmZt6t3F1F22mIIIbeaqnbIGi5RGGIGe6W3Ipm08999r0aGmZWOIKIg6W3KYII6e
X24aaa2UCMDjjjC000myRxpIIIYKJRhsC000W@tyjla89vjPJJ10000ht_@nt49Wj910000SRx@3
IIIIacss00000y@lF7999IefjQ30000y@pt6IYaaqGG65m@000c400mM00090008V0006100m000
049IIIiQ3I08999099fLGEGaaaqXZ4KvG2Waaag1040610lOi0I000G20091SW000W8GE0IIIIH4
DaAX2tBQGD0XW000i605Q8uW10CGRRRBBBP9Eaaae4000qssgDNIYbO99Io3000SRssMOHoIY899
90000WjjjDabab2IIIs3WWQ080BB9ID0A8BB1g603q000m600WB100C00Wu48WB00Wa00WD08GII
IYRH2JCjjjwijjPtaa89pca8PRhssRRssUIaaa2bKsYPRRRKRRR39999e8fiWsssiqssgbaa49LM
6C5RxQ0G0BBAYejjjQ08G200W9000k500mi000c0008J000P300mQWW6A08jDDH40000a4jKM0jf
Dmd580190000W6j9900WW04a0000000JRJY00082191t9OWf1220W00WW000008HQQZ8202I3W00
I20xuW1099ew790999nW04098HeTX2G6000W88HG00GD08WWaWCa150111b6W28888h1GX69Ce6W
30GIIs9W2g905maaa8100um02WK060GIIYGW4mT040K0qaGIIYaWaWp080O0QY899922I0R0GWIJ
HXJ6C8D02Wc668IIIY000Gy14ecaa4J00mf47WD99Ha0000Wa49ejjQ3RjnRba89n_t@sRhssEMt
ks9III2zj@lORRR3pRtc99992_s__nssiDksORHIYa4zD@@PRss6sidt9HII2x@@jXjjjDQRTDYa
aa8_@@rpca89ia49LIYa4@Iaai9IIoQHIIc8999s9991jjjDjz@zssssi@MoYSRRpsTxl_VjDRRi
b8BvjPRRzvVRZcjjjWbaj5ssssu_@sCRRRp8BPp6RRhsQRRt7jjQRfj9B9sgjjnczzFhsssOsMM6
saaaqsssQRIIYSRRhsD99IcjjQxta89nsgjz0eU5DW001iOJ61T@VmFmqmtHBR1X001WsWMgwWDY
6mW63E8Q06YJucQ0O8nW563WYZd6fxXI2foYQmWG001GMzWLZME1QyoMYY4en7Hj7x00@5FIC200
02qOeWKNh6WBEwOXwKxAQWV2ennOJS8G3V62WZGaBP0WXY6GeuUABn63YW0bHJDfj0FI4e1W0W0r
0a0W0iWg1Om000Ge1ASAW498GopGAyOZ1f1imF3C4FI35u4Hr1oqf06Pwq0010e0dOiYlCa891rt
734a4a8991H2IIAslRY6OZE2PGIIIGd04KA8112cJS2UqVf51qKxTR5SgL352aG0DD5DmJn9CrE1
CCvH21QWI94C41HCtKOG5540999Bs27aWaaqNX50999h1GX0EL8GZJ4a4aL3W2WaW4RoGXVEA088
9Pd050I2I0989HD0A8199f6W5w4u02IGIH3a0899BGII2L7e0404WNRWe7X3g1e12020r00IS2HS
q010440Q6Z04000G00100G0080W0088GHA5K30J;
INTEGER CHECKSUM=35773;
BOOLEAN UROW[128];
' bit 24-17 and 5-0 unsed
BOOLEAN UROW_MASK[128] = $FFFFFFFFFFFFFFFFFFFFFFFFFE01FFC0;
ENDDATA;

PROCEDURE DO_EXIT USES GV;
IRSTOP IDLE;
IRSCAN 8,$81;
IRSTOP IRPAUSE;
WAIT 20 USEC;
IF STATUS!=0 THEN IRSCAN 8, $07;
WAIT 200 USEC;
STATE RESET;
EXIT STATUS;
ENDPROC;

PROCEDURE PROC_INIT_AES USES GV;
    IRSCAN 8, $DD;
    DRSTOP IDLE;
    DRSCAN 128, $00000000000000000000000000000000;
    DRSTOP DRPAUSE;
    WAIT 3 CYCLES; 
    WAIT 48 USEC;

ENDPROC;

PROCEDURE PROC_VERIFY_IDCODE USES GV, PROC_INIT_AES, DO_EXIT;
' Shift IDCODE instruction
IRSCAN 8,$0F;
DRSCAN 32, $00000000, CAPTURE ID[],COMPARE $02A141CF,$0EFFFFFF,PASS;
IF PASS ==1 THEN GOTO idok;
STATUS = 6;
PRINT "Failed to verify IDCODE";

EXIT STATUS;

idok:

    CALL PROC_INIT_AES;
    IRSCAN 8, $0A;
    DRSTOP IDLE;
    DRSCAN 128, $E137623A2EEEE91126015F3F73664945;
    DRSTOP DRPAUSE;
    WAIT 3 CYCLES;
    WAIT 256 USEC;

    DRSCAN 128, $00000000000000000000000000000000, CAPTURE Buff128[];

    IF Buff128[127] THEN GOTO M7VerDone;

    STATUS = -31;
    PRINT "Failed to verify AES Sec.";
    CALL DO_EXIT;
    M7VerDone:
    
    IF 1 THEN GOTO RegDev;

    IF Buff128[126] THEN GOTO M7idok;
    STATUS = -32;
    PRINT "Failed to verify IDCODE.";
    PRINT "The Target is not an M7 Device.";
    CALL DO_EXIT;
    
    RegDev:

    IF Buff128[126]==0 THEN GOTO M7idok;
    STATUS = -32;
    PRINT "Failed to verify IDCODE.";
    PRINT "M7 Device detected.";
    CALL DO_EXIT;
    
    M7idok:

IDRev =INT(ID[31..28]);
IDFab = INT(ID[24..24]);
ENDPROC;

PROCEDURE DO_VERIFY_IDCODE USES PROC_VERIFY_IDCODE;
WAIT RESET, 5 CYCLES;
CALL PROC_VERIFY_IDCODE;
ENDPROC;

PROCEDURE PROC_BP_VER USES GV;
BOOLEAN PLAYER_VERSION_BOOLEAN[32];
PLAYER_VERSION_BOOLEAN[31..0] = BOOL(PLAYER_VERSION_VARIABLE);

INTEGER PLAYER_MAJOR_VERSION = INT (PLAYER_VERSION_BOOLEAN[23..16]) - SCULPTOR_MAJOR_BASE;
INTEGER PLAYER_MINOR_VERSION = INT (PLAYER_VERSION_BOOLEAN[15..8]) - SCULPTOR_MINOR_BASE;

Buff32[31..0] = BOOL(PLAYER_MAJOR_VERSION);
ACT_UROW_SW_VERSION[6..5] = Buff32[1..0];
Buff32[31..0] = BOOL(PLAYER_MINOR_VERSION);
ACT_UROW_SW_VERSION[4..1] = Buff32[3..0];
ACT_UROW_SW_VERSION[0] = PLAYER_VERSION_BOOLEAN[0];

ENDPROC;

PROCEDURE DO_READ_SECURITY USES GV;
IRSTOP IDLE;
IRSCAN 8,$A4;
IRSTOP IRPAUSE;
WAIT 3 CYCLES;
DRSCAN 44, $00000000000,CAPTURE SecReg[];

ULUWE = SecReg[9];
ULARE = SecReg[8];
ULUPC = SecReg[7];
ULUFE = SecReg[6];
ULUFP = SecReg[5];
ULUFJ = SecReg[4];
ULFLR = SecReg[3];
ULULR = SecReg[2];
ULAWE = SecReg[1];
ULARD = SecReg[0];
ULOPT[1] = SecReg[11];
ULOPT[0] = SecReg[10];
ENDPROC;

PROCEDURE DO_CHECK_R USES DO_READ_SECURITY, GV, DO_EXIT;
CALL DO_READ_SECURITY;

IF ULARE THEN GOTO ArrayEPR;
IF ULARD == 0 THEN ChkSec = 0;
IF ULARD == 0 THEN GOTO SkipRChk;

STATUS = -30;
PRINT "FPGA Array Verification is protected by pass key.";
PRINT "A valid pass key needs to be provided.";
CALL DO_EXIT;

ArrayEPR:
STATUS = -33;
PRINT "FPGA Array Encryption is enforced. Plain text verification is prohibited.";
CALL DO_EXIT;

SkipRChk:
ENDPROC;

PROCEDURE DO_CHECK_W USES DO_READ_SECURITY, GV, DO_EXIT;
CALL DO_READ_SECURITY;
IF ULAWE THEN GOTO ArrayWP;
IF ULARD THEN GOTO ArrayRPW;
IF ULARE THEN GOTO ArrayEPW;
GOTO SkipWChk;

ArrayWP:
STATUS = -28;
PRINT "FPGA Array Write/Erase is protected by pass key.";
PRINT "A valid pass key needs to be provided.";
CALL DO_EXIT;

ArrayRPW:
STATUS = -30;
PRINT "FPGA Array Verification is protected by pass key.";
PRINT "A valid pass key needs to be provided.";
CALL DO_EXIT;

ArrayEPW:
STATUS = -33;
PRINT "FPGA Array Encryption is enforced. Plain text programming is prohibited.";
CALL DO_EXIT;

SkipWChk:
ENDPROC;

PROCEDURE PROC_READ_FSN USES GV;
    ' Read FSN
    IRSCAN 8,$F9;
    DRSTOP IDLE;
    DRSCAN 3,$0;
    DRSTOP DRPAUSE;
    WAIT 1 CYCLES;

    IRSTOP IDLE;
    IRSCAN 8,$BF;
    IRSTOP IRPAUSE;
    WAIT 3 CYCLES;
    WAIT 264 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE Buff128[];

ENDPROC;

PROCEDURE DO_INITIALIZE USES GV, DO_EXIT, PROC_VERIFY_IDCODE, DO_CHECK_W, DO_CHECK_R, PROC_READ_FSN, BITSTREAM, PROC_BP_VER, PARAMETERS;

FREQUENCY freq * 1000000;

IRSTOP IRPAUSE;
DRSTOP DRPAUSE;

'Goto reset state
WAIT RESET, 5 CYCLES;

'Verify Device ID
CALL PROC_VERIFY_IDCODE;

' Sample/Preload BSR Value
IRSCAN 8, $01;
DRSCAN 708, BsrPattern[];


' Execute ISC_ENABLE
IRSCAN 8, $80;
DRSTOP IDLE;
DRSCAN 18, #000000000000000000;
DRSTOP DRPAUSE;
WAIT 3 CYCLES; 
WAIT 556 USEC;

IRSCAN 8, $80, CAPTURE Buff32[7..0];

IF Buff32[5] == 0 THEN GOTO EnableOK;

DRSCAN 18, #000000000000000000, CAPTURE ISC_Config_Result[];
STATUS = 5;
PRINT "Failed to enter programming mode.";
EXPORT "ISC_Config_Result", ISC_Config_Result[];
CALL DO_EXIT;

EnableOK:

DRSCAN 18, #000000000000000000, CAPTURE ISC_Config_Result[];
IF ISC_Config_Result[16] THEN GOTO CRCOK;

STATUS = -26;
PRINT "Failed to enter programming mode.";
EXPORT "ISC_Config_Result", ISC_Config_Result[];
CALL DO_EXIT;

CRCOK:

'IDLE State check
IRSCAN 8, $84;
DRSCAN 5, #00000,COMPARE #00100,#00100, PASS;
IF !PASS THEN GOTO jtagOK;
PRINT "Failed to enter programming mode.";

EXIT -25;

jtagOK:
IF !ChkArray THEN GOTO SkipChkArray;
IF !ArrayROnly THEN CALL DO_CHECK_W; 
IF ArrayROnly THEN CALL DO_CHECK_R; 
SkipChkArray:
IF (PLAYER_VERSION_VARIABLE != 0) THEN 
    CALL PROC_BP_VER;

CALL PROC_READ_FSN;

ENDPROC;

PROCEDURE READ_INITIALIZE USES GV, DO_INITIALIZE;
ChkFrom = 0;
ChkArray = 0;
ChkSec = 0;
CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE FW_INITIALIZE USES GV, DO_INITIALIZE;
FromROnly = 0;
ChkFrom = 1;
ChkArray = 0;
CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE FR_INITIALIZE USES GV, DO_INITIALIZE;
ChkSec = 0;
ChkArray = 0;
CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AW_INITIALIZE USES GV, DO_INITIALIZE;
ArrayROnly = 0;
ChkFrom = 0;
ChkArray = 1;
CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE AR_INITIALIZE USES GV, DO_INITIALIZE;
ArrayROnly = 1;
ChkFrom = 0;
ChkArray = 1;
CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE W_INITIALIZE USES GV, DO_INITIALIZE;
ArrayROnly = 0;
ChkArray = 1;
CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE R_INITIALIZE USES GV, DO_INITIALIZE;
ArrayROnly = 1;
ChkArray = 1;
CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE INITIALIZE USES GV, DO_INITIALIZE;
ArrayROnly = 0;
FromROnly = 0;
ChkFrom = 1;
ChkArray = 1;
CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE SW_INITIALIZE USES GV, DO_INITIALIZE;
ChkFrom = 0;
ChkArray = 0;
CALL DO_INITIALIZE;
ENDPROC;

PROCEDURE DO_OUTPUT_SECURITY USES GV;
PRINT "Security Setting :";
IF ULUFP THEN
    PRINT "FlashROM Write/Erase protected by pass key.";
IF ULUFJ THEN
    PRINT "FlashROM Read protected by pass key.";
IF ULAWE THEN
    PRINT "Array Write/Erase protected by pass key.";
IF ULARD THEN 
    PRINT "Array Verify protected by pass key.";
IF ULUFE THEN
    PRINT "Encrypted FlashROM Programming Enabled.";
IF ULARE THEN
    PRINT "Encrypted FPGA Array Programming Enabled.";
PRINT "=========================================";
 
ENDPROC;

PROCEDURE PROC_PROGRAM_UROW USES GV, BITSTREAM, DO_EXIT, POLL_PROGRAM;

    FOR FRomRowNumber=8 TO 1 STEP -1;
        IRSCAN 8, $9F;
        DRSCAN 3, BOOL(FRomRowNumber);

        IRSCAN 8, $9B;
        DRSTOP IDLE;
        DRSCAN 128, $FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;
        DRSTOP DRPAUSE;
        WAIT 5 CYCLES;
        WAIT 10000 USEC;
    NEXT FRomRowNumber;

    IF IsEraseOnly THEN GOTO SKIP_CYC_INCREMENT;

    IF ACT_UROW_CYCLE_COUNT == 1023 THEN GOTO SKIP_CYC_INCREMENT;
        ACT_UROW_CYCLE_COUNT = ACT_UROW_CYCLE_COUNT + 1;
    SKIP_CYC_INCREMENT:

    IF IsEraseOnly THEN 
        UROW[] = $FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF;
    IF IsEraseOnly && !IsRestoreDesign THEN 
        GOTO SKIP_DESIGN_INFO;

    ' Compose UROW data

    Buff32[31..0] = BOOL(CHECKSUM);
    IF !IsRestoreDesign THEN 
      UROW[127..112] = Buff32[15..0];
    IF IsRestoreDesign THEN 
      UROW[127..112] = sUROW_CHECKSUM[15..0];
      
    IF !IsRestoreDesign THEN 
      UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];
    IF IsRestoreDesign THEN 
      UROW[101..32] = sUROW_DESIGN_NAME[69..0];

    SKIP_DESIGN_INFO:

    Buff32[31..0] = BOOL(ACT_UROW_CYCLE_COUNT);
    UROW[111..102] = Buff32[9..0];
    UROW[31..29] = ACT_UROW_PROG_METHOD[2..0];
    UROW[28..25] = ACT_UROW_ALGO_VERSION[3..0];
    UROW[16..10] = ACT_UROW_SW_VERSION[6..0];
    UROW[9..6] = ACT_UROW_PROGRAM_SW[3..0];

    IRSCAN 8, $A7;
    DRSTOP IDLE;
    DRSCAN 128, UROW[];
    DRSTOP DRPAUSE;
    WAIT 15 CYCLES;

    CALL POLL_PROGRAM;

    IF PASS == 1 THEN GOTO Program_OK3;

    STATUS = -24;
    PRINT "Failed to program UROW";
    CALL DO_EXIT;

    Program_OK3:

    ' readback and verify UROW
    IRSTOP IDLE;
    IRSCAN 8, $A8;
    IRSTOP IRPAUSE;
    WAIT 3 CYCLES;
    WAIT 264 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[], UROW_MASK[], PASS;

    IF PASS THEN GOTO UROW_OK;
    STATUS = -24;
    PRINT "Failed to program UROW";
    CALL DO_EXIT;

    UROW_OK:

ENDPROC;

PROCEDURE PROC_READ_UROW USES GV, BITSTREAM;
    ' read UROW
    IRSTOP IDLE;
    IRSCAN 8, $A8;
    IRSTOP IRPAUSE;
    WAIT 3 CYCLES;
    WAIT 264 USEC;
    DRSCAN 128, $00000000000000000000000000000000, CAPTURE UROW[];

    sUROW_CHECKSUM[15..0] = UROW[127..112];
    sUROW_CYCLE_COUNT = INT (UROW[111..102]);
    sUROW_DESIGN_NAME[69..0] = UROW[101..32];
    sUROW_PROG_METHOD[2..0] = UROW[31..29];
    sUROW_ALGO_VERSION[3..0] = UROW[28..25];
    sUROW_SW_VERSION[6..0] = UROW[16..10];
    sUROW_PROGRAM_SW[3..0] = UROW[9..6];

    ACT_UROW_CYCLE_COUNT = sUROW_CYCLE_COUNT;

ENDPROC;

' JESD71 (Aug 99) specification is ambiguous about ordering of integer
' array initializers.
' Until the specification is clarified, we will allow both orderings

PROCEDURE FIX_INT_ARRAYS USES GV;
IF hex[0]==48 THEN GOTO intok;
FOR i=0 TO 7;
  PUSH hex[i];
  hex[i]=hex[15-i];
  POP hex[15-i];
NEXT i;
intok:
ENDPROC;

PROCEDURE PROC_DISP_CHKSUM_DESIGN USES GV, FIX_INT_ARRAYS;

CALL FIX_INT_ARRAYS;
PRINT "CHECKSUM: ",     CHR$(hex[INT(sUROW_CHECKSUM[15..12])]),
            CHR$(hex[INT(sUROW_CHECKSUM[11..8])]),
            CHR$(hex[INT(sUROW_CHECKSUM[7..4])]),
            CHR$(hex[INT(sUROW_CHECKSUM[3..0])]); 

PRINT "Design Name: ",
            CHR$(INT(sUROW_DESIGN_NAME[63..69])),
            CHR$(INT(sUROW_DESIGN_NAME[56..62])),
            CHR$(INT(sUROW_DESIGN_NAME[49..55])),
            CHR$(INT(sUROW_DESIGN_NAME[42..48])),
            CHR$(INT(sUROW_DESIGN_NAME[35..41])),
            CHR$(INT(sUROW_DESIGN_NAME[28..34])),
            CHR$(INT(sUROW_DESIGN_NAME[21..27])),
            CHR$(INT(sUROW_DESIGN_NAME[14..20])),
            CHR$(INT(sUROW_DESIGN_NAME[7..13])),
            CHR$(INT(sUROW_DESIGN_NAME[0..6]));
ENDPROC;

PROCEDURE PROC_DISPLAY_UROW USES GV, PROC_DISP_CHKSUM_DESIGN;

PRINT "User information : ";
CALL PROC_DISP_CHKSUM_DESIGN;

IF FLAG_DISPLAY_CYC == 1 THEN PRINT "CYCLE COUNT: ",     sUROW_CYCLE_COUNT;

INTEGER tmpInt = INT(sUROW_PROG_METHOD[]);

INTEGER tmpInt3 = 0;
INTEGER tmpInt4 = 0;
INTEGER tmpInt5 = 0;
IF tmpInt == 0 THEN GOTO PRINT1532;
IF tmpInt == 1 THEN GOTO PRINT_STAPL;
IF tmpInt == 2 THEN GOTO PRINT_DIRECT_C;
PRINT "Programming Method: UNKNOWN";
GOTO PRINT_PROG_METHOD_DONE;

PRINT1532:
PRINT "Programming Method: IEEE1532";
GOTO PRINT_PROG_METHOD_DONE;

PRINT_STAPL:
PRINT "Programming Method: STAPL";
GOTO PRINT_PROG_METHOD_DONE;

PRINT_DIRECT_C:
PRINT "Programming Method: DirectC";

PRINT_PROG_METHOD_DONE:

PRINT "Algorithm Version: ", INT(sUROW_ALGO_VERSION[3..0]);

tmpInt = INT(sUROW_PROGRAM_SW[]);
IF tmpInt == 0 THEN GOTO PRINT_G3_PROG_1;
IF tmpInt == 1 THEN GOTO PRINT_G3_PROG_2;
IF tmpInt == 2 THEN GOTO PRINT_G3_PROG_3;

IF tmpInt == 3 THEN GOTO PRINT_BP_SCULPTOR_1;
IF tmpInt == 4 THEN GOTO PRINT_BP_SCULPTOR_2;

IF tmpInt == 5 THEN GOTO PRINT_DIRECT_C_PROG;
IF tmpInt == 6 THEN GOTO PRINT_ACTEL_JAM;

PRINT "Programmer: UNKNOWN";
GOTO PRINT_PROGRAMMER_DONE;

PRINT_G3_PROG_1:
PRINT "Programmer: FlashPro";
GOTO PRINT_FLASHPRO_VER;

PRINT_G3_PROG_2:
PRINT "Programmer: FlashPro Lite";
GOTO PRINT_FLASHPRO_VER;

PRINT_G3_PROG_3:
PRINT "Programmer: FlashPro3";
GOTO PRINT_FLASHPRO_VER;

PRINT_FLASHPRO_VER:
tmpInt = INT(sUROW_SW_VERSION[]);
IF tmpInt == 127 THEN GOTO PRINT_UNKNOWN_SW_VERSION;
IF tmpInt == 0 THEN GOTO PRINT_FLASHPRO_33;
IF tmpInt == 1 THEN GOTO PRINT_FLASHPRO_34;
IF tmpInt == 2 THEN GOTO PRINT_FLASHPRO_40;
IF tmpInt == 3 THEN GOTO PRINT_FLASHPRO_41;
IF tmpInt == 4 THEN GOTO PRINT_FLASHPRO_42;
IF tmpInt == 5 THEN GOTO PRINT_FLASHPRO_50;
IF tmpInt == 6 THEN GOTO PRINT_FLASHPRO_51;
IF tmpInt == 7 THEN GOTO PRINT_FLASHPRO_60;

PRINT "Software: FlashPro version greater than v6.0.";
GOTO PRINT_PROGRAMMER_DONE;

PRINT_UNKNOWN_SW_VERSION:
PRINT "Software: FlashPro vX.X";
GOTO PRINT_PROGRAMMER_DONE;

PRINT_FLASHPRO_60:
PRINT "Software: FlashPro v6.0";
GOTO PRINT_PROGRAMMER_DONE;

PRINT_FLASHPRO_51:
PRINT "Software: FlashPro v5.1";
GOTO PRINT_PROGRAMMER_DONE;

PRINT_FLASHPRO_50:
PRINT "Software: FlashPro v5.0";
GOTO PRINT_PROGRAMMER_DONE;

PRINT_FLASHPRO_42:
PRINT "Software: FlashPro v4.2";
GOTO PRINT_PROGRAMMER_DONE;

PRINT_FLASHPRO_41:
PRINT "Software: FlashPro v4.1";
GOTO PRINT_PROGRAMMER_DONE;

PRINT_FLASHPRO_40:
PRINT "Software: FlashPro v4.0";
GOTO PRINT_PROGRAMMER_DONE;

PRINT_FLASHPRO_34:
PRINT "Software: FlashPro v3.4";
GOTO PRINT_PROGRAMMER_DONE;

PRINT_FLASHPRO_33:
PRINT "Software: FlashPro v3.3";
GOTO PRINT_PROGRAMMER_DONE;

PRINT_BP_SCULPTOR_1:
PRINT "Programmer: SiliconSculptor II";
tmpInt = INT(sUROW_SW_VERSION[]);
IF tmpInt == 127 THEN GOTO PRINT_UNKNOWN_SW_VERSION;

tmpInt3 = INT(sUROW_SW_VERSION[6..5]) + SCULPTOR_MAJOR_BASE;
tmpInt4 = INT(sUROW_SW_VERSION[4..1]) + SCULPTOR_MINOR_BASE;
tmpInt5 = 0;
IF sUROW_SW_VERSION[0] THEN 
    tmpInt5 = 1;

PRINT "Software: Sculptor Win v", tmpInt3, ".", tmpInt4, ".", tmpInt5;
GOTO PRINT_PROGRAMMER_DONE;

PRINT_BP_SCULPTOR_2:
PRINT "Programmer: BP Programmer";
tmpInt = INT(sUROW_SW_VERSION[]);
IF tmpInt == 127 THEN GOTO PRINT_UNKNOWN_SW_VERSION;

tmpInt3 = INT(sUROW_SW_VERSION[6..5]) + SCULPTOR_MAJOR_BASE;
tmpInt4 = INT(sUROW_SW_VERSION[4..1]) + SCULPTOR_MINOR_BASE;
tmpInt5 = 0;
IF sUROW_SW_VERSION[0] THEN 
    tmpInt5 = 1;

PRINT "Software: BP Win v", tmpInt3, ".", tmpInt4, ".", tmpInt5;

GOTO PRINT_PROGRAMMER_DONE;

PRINT_DIRECT_C_PROG:
PRINT "Programmer: DirectC";
GOTO PRINT_PROGRAMMER_DONE;

PRINT_ACTEL_JAM:
PRINT "Programmer: Actel JAM Player.";

PRINT_PROGRAMMER_DONE:
PRINT "=========================================";

ENDPROC;

PROCEDURE PROC_READ_IDCODE USES GV;
IRSCAN 8,$0F;
DRSCAN 32, $00000000,CAPTURE ID[];
EXPORT "IDCODE",ID[];
ENDPROC;

PROCEDURE DO_READ_IDCODE USES PROC_READ_IDCODE;
WAIT RESET, 5 CYCLES;
CALL PROC_READ_IDCODE;
EXIT 0;
ENDPROC;

PROCEDURE DO_QUERY_SECURITY USES DO_READ_SECURITY, DO_OUTPUT_SECURITY;
CALL DO_READ_SECURITY;
CALL DO_OUTPUT_SECURITY;
ENDPROC;

PROCEDURE POLL_PROGRAM USES GV;
' Check for program status
IRSTOP IDLE;
IRSCAN 8, $84;
IRSTOP IRPAUSE;

DRSTOP IDLE;
FOR i=0 TO 16380;
        WAIT 1 CYCLES;
        WAIT 100 USEC;
        'check for ROWBUSY and COLBUSY
        DRSCAN 5, #00000,COMPARE #00000,#01011, PASS;

    IF PASS == 1 THEN i = 16380;
NEXT i;
DRSTOP DRPAUSE;
ENDPROC;

PROCEDURE POLL_ERASE USES GV;
  ' Check for erase status
  IRSTOP IDLE;
  IRSCAN 8, $84;
  IRSTOP IRPAUSE;

  DRSTOP IDLE;
  FOR i=0 TO 262140;
    WAIT 1 CYCLES;
    WAIT 1000 USEC;
    'check for ROWBUSY and COLBUSY
    DRSCAN 5, #00000,COMPARE #00000,#00011, PASS;

    IF PASS == 1 THEN i = 262140;
  NEXT i;
  DRSTOP DRPAUSE;
ENDPROC;

PROCEDURE EXE_PROGRAM USES GV, DO_EXIT, POLL_PROGRAM;

    ' PROGRAM
    IRSTOP IDLE;
    IRSCAN 8, $83;
    IRSTOP IRPAUSE;
    WAIT 3 CYCLES;

    CALL POLL_PROGRAM;

    IF PASS == 1 THEN GOTO Program_OK2;

    STATUS = 10;
    PRINT "Failed to program FPGA Array at row ", RowNumber, ".";
    CALL DO_EXIT;

    Program_OK2:

ENDPROC;

PROCEDURE EXE_VERIFY USES GV, DO_EXIT, POLL_PROGRAM;

    ' Verify0
    IRSCAN 8,$8D;
    DRSTOP IDLE;
    DRSCAN 2,VERIFY_EOL[];
    DRSTOP DRPAUSE;
    WAIT 3 CYCLES;
    WAIT 264 USEC;
    CALL POLL_PROGRAM;
    IRSCAN 8,$8D;
    DRSCAN 2, VERIFY_EOL[],COMPARE #00, #11, PASS ;  ' ISC_Verify_Result

    IF PASS THEN GOTO Verify_0_OK;

    STATUS =11;
    PRINT "Verify 0 failed"; 
    PRINT "Row Number : ", RowNumber;

    CALL DO_EXIT;

    Verify_0_OK:

    ' Verify1
    IRSCAN 8,$8E;
    DRSTOP IDLE;
    DRSCAN 2,VERIFY_EOL[];
    DRSTOP DRPAUSE;
    WAIT 3 CYCLES;
    WAIT 264 USEC;
    CALL POLL_PROGRAM;
    IRSCAN 8,$8E;
    DRSCAN 2, VERIFY_EOL[],COMPARE #00, #11, PASS ;  ' ISC_Verify_Result

    IF PASS THEN GOTO Verify_1_OK;

    STATUS =11;
    PRINT "Verify 1 failed"; 
    PRINT "Row Number : ", RowNumber;

    CALL DO_EXIT;

    Verify_1_OK:

ENDPROC;

PROCEDURE EXE_ERASE USES GV, DO_EXIT, PROC_PROGRAM_UROW, PROC_READ_UROW, BITSTREAM, POLL_ERASE;

IF !CombEraseSelect[14] THEN GOTO SkipRUrow;
    CALL PROC_READ_UROW;
    EXPORT "ACTEL_SLOG_UROW", UROW[];
SkipRUrow:

IRSCAN 8, $85;
DRSTOP IDLE;
DRSCAN 23, CombEraseSelect[];
DRSTOP DRPAUSE;

WAIT 3 CYCLES; 
CALL POLL_ERASE;

IF PASS THEN GOTO EraseOK;
STATUS = 8;
PRINT "Failed Erase Operation";
CALL DO_EXIT;
EraseOK:

IF CombEraseSelect[14] THEN 
    CALL PROC_PROGRAM_UROW;

ENDPROC;

PROCEDURE DO_ERASE USES GV, EXE_ERASE;
PRINT "Erase ...";

CombEraseSelect[22..0] = $004000;

CombEraseSelect[0] = 1;

CALL EXE_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ARRAY USES GV, EXE_ERASE;
PRINT "Erase FPGA Array ...";

CombEraseSelect[22..0] = $004001;
CALL EXE_ERASE;

ENDPROC;

PROCEDURE DO_ERASE_ONLY USES GV, DO_ERASE;
IsEraseOnly = 1;
CALL DO_ERASE;
ENDPROC;

PROCEDURE DO_ERASE_ARRAY_ONLY USES GV, DO_ERASE_ARRAY;
IsEraseOnly = 1;
CALL DO_ERASE_ARRAY;
ENDPROC;

PROCEDURE DO_ERASE_ALL USES GV, EXE_ERASE;
IF 1 THEN PRINT "Erase FPGA Array, FlashROM and Security Settings ...";
IF !1 THEN PRINT "Erase FPGA Array and FlashROM ...";

CombEraseSelect[22..0] = #11111111100000000001111;
IsEraseOnly = 1;
CALL EXE_ERASE;

ENDPROC;

PROCEDURE DO_PROGRAM_RLOCK USES GV, POLL_PROGRAM, DO_EXIT;

    DataIndex = 0;
    IRSCAN 8,$89;

    DRSTOP IDLE;
    FOR SDNumber=1 TO 4;
        FOR i=1 TO 8;
            DRSCAN 26, rlock[DataIndex+25..DataIndex];
            WAIT 3 CYCLES;
            DataIndex = DataIndex + 26;
        NEXT i;
    NEXT SDNumber;

    DRSTOP DRPAUSE;

    IRSTOP IDLE;
    IRSCAN 8, $8C;
    IRSTOP IRPAUSE;
    WAIT 3 CYCLES;

    CALL POLL_PROGRAM;

    IF PASS == 1 THEN GOTO Program_RLOCKOK;

    STATUS = 10;
    PRINT "Failed to program RLock.";
    CALL DO_EXIT;

    Program_RLOCKOK:

ENDPROC;

PROCEDURE DO_VERIFY_DEVICE_INFO USES GV, BITSTREAM
, PROC_READ_UROW, PROC_DISP_CHKSUM_DESIGN, DO_READ_SECURITY
, DO_EXIT;
    CALL PROC_READ_UROW;
    CALL PROC_DISP_CHKSUM_DESIGN;
    CALL DO_READ_SECURITY;
' Verify ULock Setting
    BOOLEAN sULOCK[10];
    INTEGER UL= INT (sULOCK[9..0]);
    INTEGER SL= INT (SecReg[9..0]);
    IF UL==SL THEN GOTO LOCK_CMP_OK;
    STATUS = -42;
    PRINT "USER LOCK Setting error.";
    CALL DO_EXIT;

    LOCK_CMP_OK:

    Buff32[31..0] = BOOL(CHECKSUM);
    UROW[127..112] = Buff32[15..0];
    UROW[101..32] = ACT_UROW_DESIGN_NAME[69..0];

    ' readback and verify UROW
    IRSTOP IDLE;
    IRSCAN 8, $A8;
    IRSTOP IRPAUSE;
    WAIT 3 CYCLES;
    WAIT 264 USEC;
    DRSCAN 128, $00000000000000000000000000000000,COMPARE UROW[], $FFFF003FFFFFFFFFFFFFFFFF00000000, PASS;

    IF PASS THEN GOTO UROW_CMP_OK;
    STATUS = -43;
    PRINT "UROW setting error.";
    CALL DO_EXIT;

    UROW_CMP_OK:

ENDPROC;

PROCEDURE DO_DEVICE_INFO USES GV, PROC_READ_UROW, PROC_DISPLAY_UROW, PROC_READ_FSN
;
    IRSCAN 8,$0E;
    DRSCAN 32, $00000000,CAPTURE Buff32[];

    EXPORT "SILSIG", Buff32[];
    CALL PROC_READ_UROW;
    CALL PROC_DISPLAY_UROW;
    CALL PROC_READ_FSN;
    EXPORT "FSN", Buff128[55..8];
    PRINT "=========================================";

ENDPROC;

PROCEDURE LOAD_ROW_DATA USES GV, BITSTREAM;
    ' Load one row of FPGA Array data.

    IRSCAN 8,$89;

    DRSTOP IDLE;
    FOR SDNumber=1 TO 4;
        FOR i=1 TO 8;
            DRSCAN 26, datastream[DataIndex+25..DataIndex];
            WAIT 3 CYCLES;
            DataIndex = DataIndex +26;
        NEXT i;
    NEXT SDNumber;
    DRSTOP DRPAUSE;

ENDPROC;

PROCEDURE DO_PROGRAM_SILSIG USES GV, DO_EXIT, DO_READ_SECURITY, POLL_PROGRAM;

    CALL DO_READ_SECURITY;

    SecReg[43..12] = SILSIG[31..0];

    SecReg[11] = ULOPT[1];
    SecReg[10] = ULOPT[0];
    SecReg[9] = ULUWE;
    SecReg[8] = ULARE;
    SecReg[7] = ULUPC;
    SecReg[6] = ULUFE;
    SecReg[5] = ULUFP;
    SecReg[4] = ULUFJ;
    SecReg[3] = ULFLR;
    SecReg[2] = ULULR;
    SecReg[1] = ULAWE;
    SecReg[0] = ULARD;

    IRSCAN 8, $A3;
    DRSTOP IDLE;
    DRSCAN 44, SecReg[];
    DRSTOP DRPAUSE;
    WAIT 3 CYCLES;

    CALL POLL_PROGRAM;

    IF PASS == 1 THEN GOTO SilSigPrg_OK;

    STATUS = 14;
    PRINT "Failed to program Silicon Signature.";
    CALL DO_EXIT;

    SilSigPrg_OK:

ENDPROC;

PROCEDURE DO_VERIFY USES GV, BITSTREAM, EXE_VERIFY, LOAD_ROW_DATA;

'Reset Address
IRSCAN 8,$87;
DRSTOP IDLE;
DRSCAN 2, #10;
DRSTOP DRPAUSE;
WAIT 3 CYCLES;

PRINT "Verifying FPGA Array";
DataIndex=0;

FOR RowNumber=2300-1 TO 0 STEP -1;

    CALL LOAD_ROW_DATA;
    CALL EXE_VERIFY;

    ' Increment Address
    IRSCAN 8,$87;
    DRSTOP IDLE;
    DRSCAN 2, #11;
    DRSTOP DRPAUSE;
    WAIT 3 CYCLES;

    EXPORT "PERCENT_DONE", 100*(2300- RowNumber + 1)/2300;

NEXT RowNumber;

PRINT "    Verifying FPGA Array -- PASS";
ENDPROC;

PROCEDURE DO_VERIFY_BOL USES GV, DO_VERIFY;
VERIFY_EOL[0] = 0;
CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_VERIFY_EOL USES GV, DO_VERIFY;
VERIFY_EOL[0] = 1;
CALL DO_VERIFY;
ENDPROC;

PROCEDURE DO_PROGRAM USES GV, EXE_PROGRAM, LOAD_ROW_DATA;

'Reset Address
IRSCAN 8, $87;
DRSTOP IDLE;
DRSCAN 2, #10;
DRSTOP DRPAUSE;
WAIT 3 CYCLES;

PRINT "Programming FPGA Array";
DataIndex=0;
FOR RowNumber=2300-1 TO 0 STEP -1;

    CALL LOAD_ROW_DATA;
    CALL EXE_PROGRAM;

    ' Increment Address
    IRSCAN 8,$87;
    DRSTOP IDLE;
    DRSCAN 2, #11;
    DRSTOP DRPAUSE;
    WAIT 3 CYCLES;

    EXPORT "PERCENT_DONE", 100*(2300 - RowNumber + 1)/2300;

NEXT RowNumber;

ENDPROC;
CRC 2FA2;